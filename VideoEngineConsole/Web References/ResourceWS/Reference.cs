//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.239
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.239 版自动生成。
// 
#pragma warning disable 1591

namespace VideoEngineConsole.ResourceWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ResourceServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DictionaryEntry[]))]
    public partial class ResourceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceStaticOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDownloadStaticOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateResourceByUserDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateResourceByUserDate1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceSNByUserDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateResourceByIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceSNByIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNotPassReasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddResourceToCatalogOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchResourceOldOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchResourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceInfoByItemIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceImagesDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceInfoBySNOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDownMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDownLoadMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDownloadMessageByLoginNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Production_Hires_Down_LogOperationCompleted;
        
        private System.Threading.SendOrPostCallback insertResourceAttributesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceCatalogByItemIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourcesByOrderIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourcesByViewCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourcesByDownloadCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourceUploadLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAttachOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAttachOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateResourceViewCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteResourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyUploadStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewResourceStatByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNotPassResourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsAlertAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyLightBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResourcesByLightBoxIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLightBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditLightBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelLightBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToLightBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelFromLightBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearLightBoxOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDefaultLightboxOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ResourceService() {
            this.Url = global::VideoEngineConsole.Properties.Settings.Default.VideoEngineConsole_ResourceWS_ResourceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetResourceStaticCompletedEventHandler GetResourceStaticCompleted;
        
        /// <remarks/>
        public event GetDownloadStaticCompletedEventHandler GetDownloadStaticCompleted;
        
        /// <remarks/>
        public event AddCompletedEventHandler AddCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event ValidateResourceByUserDateCompletedEventHandler ValidateResourceByUserDateCompleted;
        
        /// <remarks/>
        public event ValidateResourceByUserDate1CompletedEventHandler ValidateResourceByUserDate1Completed;
        
        /// <remarks/>
        public event GetResourceSNByUserDateCompletedEventHandler GetResourceSNByUserDateCompleted;
        
        /// <remarks/>
        public event ValidateResourceByIDsCompletedEventHandler ValidateResourceByIDsCompleted;
        
        /// <remarks/>
        public event GetResourceSNByIDsCompletedEventHandler GetResourceSNByIDsCompleted;
        
        /// <remarks/>
        public event GetNotPassReasonCompletedEventHandler GetNotPassReasonCompleted;
        
        /// <remarks/>
        public event AddResourceToCatalogCompletedEventHandler AddResourceToCatalogCompleted;
        
        /// <remarks/>
        public event SearchResourceOldCompletedEventHandler SearchResourceOldCompleted;
        
        /// <remarks/>
        public event SearchResourceCompletedEventHandler SearchResourceCompleted;
        
        /// <remarks/>
        public event GetResourceByUserIDCompletedEventHandler GetResourceByUserIDCompleted;
        
        /// <remarks/>
        public event GetResourceInfoByItemIdCompletedEventHandler GetResourceInfoByItemIdCompleted;
        
        /// <remarks/>
        public event GetResourceImagesDetailCompletedEventHandler GetResourceImagesDetailCompleted;
        
        /// <remarks/>
        public event GetResourceInfoBySNCompletedEventHandler GetResourceInfoBySNCompleted;
        
        /// <remarks/>
        public event DeleteDownMessageCompletedEventHandler DeleteDownMessageCompleted;
        
        /// <remarks/>
        public event GetDownLoadMessageCompletedEventHandler GetDownLoadMessageCompleted;
        
        /// <remarks/>
        public event GetDownloadMessageByLoginNameCompletedEventHandler GetDownloadMessageByLoginNameCompleted;
        
        /// <remarks/>
        public event Production_Hires_Down_LogCompletedEventHandler Production_Hires_Down_LogCompleted;
        
        /// <remarks/>
        public event insertResourceAttributesCompletedEventHandler insertResourceAttributesCompleted;
        
        /// <remarks/>
        public event GetResourceCatalogByItemIdCompletedEventHandler GetResourceCatalogByItemIdCompleted;
        
        /// <remarks/>
        public event GetResourcesByOrderIdCompletedEventHandler GetResourcesByOrderIdCompleted;
        
        /// <remarks/>
        public event GetResourcesByViewCountCompletedEventHandler GetResourcesByViewCountCompleted;
        
        /// <remarks/>
        public event GetResourcesByDownloadCountCompletedEventHandler GetResourcesByDownloadCountCompleted;
        
        /// <remarks/>
        public event GetResourceUploadLogCompletedEventHandler GetResourceUploadLogCompleted;
        
        /// <remarks/>
        public event AddAttachCompletedEventHandler AddAttachCompleted;
        
        /// <remarks/>
        public event GetAttachListCompletedEventHandler GetAttachListCompleted;
        
        /// <remarks/>
        public event DeleteAttachCompletedEventHandler DeleteAttachCompleted;
        
        /// <remarks/>
        public event UpdateResourceViewCountCompletedEventHandler UpdateResourceViewCountCompleted;
        
        /// <remarks/>
        public event DeleteResourceCompletedEventHandler DeleteResourceCompleted;
        
        /// <remarks/>
        public event GetMyUploadStatusCompletedEventHandler GetMyUploadStatusCompleted;
        
        /// <remarks/>
        public event GetNewResourceStatByUserCompletedEventHandler GetNewResourceStatByUserCompleted;
        
        /// <remarks/>
        public event GetNotPassResourcesCompletedEventHandler GetNotPassResourcesCompleted;
        
        /// <remarks/>
        public event IsAlertAdminCompletedEventHandler IsAlertAdminCompleted;
        
        /// <remarks/>
        public event GetMyLightBoxCompletedEventHandler GetMyLightBoxCompleted;
        
        /// <remarks/>
        public event GetResourcesByLightBoxIDCompletedEventHandler GetResourcesByLightBoxIDCompleted;
        
        /// <remarks/>
        public event AddLightBoxCompletedEventHandler AddLightBoxCompleted;
        
        /// <remarks/>
        public event EditLightBoxCompletedEventHandler EditLightBoxCompleted;
        
        /// <remarks/>
        public event DelLightBoxCompletedEventHandler DelLightBoxCompleted;
        
        /// <remarks/>
        public event AddToLightBoxCompletedEventHandler AddToLightBoxCompleted;
        
        /// <remarks/>
        public event DelFromLightBoxCompletedEventHandler DelFromLightBoxCompleted;
        
        /// <remarks/>
        public event ClearLightBoxCompletedEventHandler ClearLightBoxCompleted;
        
        /// <remarks/>
        public event CreateDefaultLightboxCompletedEventHandler CreateDefaultLightboxCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResourceStatic", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetResourceStatic() {
            object[] results = this.Invoke("GetResourceStatic", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceStaticAsync() {
            this.GetResourceStaticAsync(null);
        }
        
        /// <remarks/>
        public void GetResourceStaticAsync(object userState) {
            if ((this.GetResourceStaticOperationCompleted == null)) {
                this.GetResourceStaticOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceStaticOperationCompleted);
            }
            this.InvokeAsync("GetResourceStatic", new object[0], this.GetResourceStaticOperationCompleted, userState);
        }
        
        private void OnGetResourceStaticOperationCompleted(object arg) {
            if ((this.GetResourceStaticCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceStaticCompleted(this, new GetResourceStaticCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDownloadStatic", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDownloadStatic(string resourceType, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetDownloadStatic", new object[] {
                        resourceType,
                        startDate,
                        endDate});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDownloadStaticAsync(string resourceType, System.DateTime startDate, System.DateTime endDate) {
            this.GetDownloadStaticAsync(resourceType, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetDownloadStaticAsync(string resourceType, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetDownloadStaticOperationCompleted == null)) {
                this.GetDownloadStaticOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDownloadStaticOperationCompleted);
            }
            this.InvokeAsync("GetDownloadStatic", new object[] {
                        resourceType,
                        startDate,
                        endDate}, this.GetDownloadStaticOperationCompleted, userState);
        }
        
        private void OnGetDownloadStaticOperationCompleted(object arg) {
            if ((this.GetDownloadStaticCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDownloadStaticCompleted(this, new GetDownloadStaticCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Add", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Add(
                    System.Guid ID, 
                    string ItemSerialNumber, 
                    string FileName, 
                    string FilePath, 
                    long FileSize, 
                    string ServerFileName, 
                    string Caption, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    System.DateTime UploadDate, 
                    System.DateTime ShotDate, 
                    string Keywords, 
                    string Description, 
                    System.DateTime UpdateDate, 
                    System.Guid UserID, 
                    int Status, 
                    string ResourceType, 
                    string Author, 
                    int hasCopyright) {
            this.Invoke("Add", new object[] {
                        ID,
                        ItemSerialNumber,
                        FileName,
                        FilePath,
                        FileSize,
                        ServerFileName,
                        Caption,
                        StartDate,
                        EndDate,
                        UploadDate,
                        ShotDate,
                        Keywords,
                        Description,
                        UpdateDate,
                        UserID,
                        Status,
                        ResourceType,
                        Author,
                        hasCopyright});
        }
        
        /// <remarks/>
        public void AddAsync(
                    System.Guid ID, 
                    string ItemSerialNumber, 
                    string FileName, 
                    string FilePath, 
                    long FileSize, 
                    string ServerFileName, 
                    string Caption, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    System.DateTime UploadDate, 
                    System.DateTime ShotDate, 
                    string Keywords, 
                    string Description, 
                    System.DateTime UpdateDate, 
                    System.Guid UserID, 
                    int Status, 
                    string ResourceType, 
                    string Author, 
                    int hasCopyright) {
            this.AddAsync(ID, ItemSerialNumber, FileName, FilePath, FileSize, ServerFileName, Caption, StartDate, EndDate, UploadDate, ShotDate, Keywords, Description, UpdateDate, UserID, Status, ResourceType, Author, hasCopyright, null);
        }
        
        /// <remarks/>
        public void AddAsync(
                    System.Guid ID, 
                    string ItemSerialNumber, 
                    string FileName, 
                    string FilePath, 
                    long FileSize, 
                    string ServerFileName, 
                    string Caption, 
                    System.DateTime StartDate, 
                    System.DateTime EndDate, 
                    System.DateTime UploadDate, 
                    System.DateTime ShotDate, 
                    string Keywords, 
                    string Description, 
                    System.DateTime UpdateDate, 
                    System.Guid UserID, 
                    int Status, 
                    string ResourceType, 
                    string Author, 
                    int hasCopyright, 
                    object userState) {
            if ((this.AddOperationCompleted == null)) {
                this.AddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperationCompleted);
            }
            this.InvokeAsync("Add", new object[] {
                        ID,
                        ItemSerialNumber,
                        FileName,
                        FilePath,
                        FileSize,
                        ServerFileName,
                        Caption,
                        StartDate,
                        EndDate,
                        UploadDate,
                        ShotDate,
                        Keywords,
                        Description,
                        UpdateDate,
                        UserID,
                        Status,
                        ResourceType,
                        Author,
                        hasCopyright}, this.AddOperationCompleted, userState);
        }
        
        private void OnAddOperationCompleted(object arg) {
            if ((this.AddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update(string itemId, string caption, string keywords, string description, System.DateTime shotDate, System.DateTime startDate, System.DateTime endDate) {
            this.Invoke("Update", new object[] {
                        itemId,
                        caption,
                        keywords,
                        description,
                        shotDate,
                        startDate,
                        endDate});
        }
        
        /// <remarks/>
        public void UpdateAsync(string itemId, string caption, string keywords, string description, System.DateTime shotDate, System.DateTime startDate, System.DateTime endDate) {
            this.UpdateAsync(itemId, caption, keywords, description, shotDate, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(string itemId, string caption, string keywords, string description, System.DateTime shotDate, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        itemId,
                        caption,
                        keywords,
                        description,
                        shotDate,
                        startDate,
                        endDate}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateResourceByUserDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValidateResourceByUserDate(System.Guid userId, System.DateTime startDate, System.DateTime endDate, int validateStatus) {
            this.Invoke("ValidateResourceByUserDate", new object[] {
                        userId,
                        startDate,
                        endDate,
                        validateStatus});
        }
        
        /// <remarks/>
        public void ValidateResourceByUserDateAsync(System.Guid userId, System.DateTime startDate, System.DateTime endDate, int validateStatus) {
            this.ValidateResourceByUserDateAsync(userId, startDate, endDate, validateStatus, null);
        }
        
        /// <remarks/>
        public void ValidateResourceByUserDateAsync(System.Guid userId, System.DateTime startDate, System.DateTime endDate, int validateStatus, object userState) {
            if ((this.ValidateResourceByUserDateOperationCompleted == null)) {
                this.ValidateResourceByUserDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateResourceByUserDateOperationCompleted);
            }
            this.InvokeAsync("ValidateResourceByUserDate", new object[] {
                        userId,
                        startDate,
                        endDate,
                        validateStatus}, this.ValidateResourceByUserDateOperationCompleted, userState);
        }
        
        private void OnValidateResourceByUserDateOperationCompleted(object arg) {
            if ((this.ValidateResourceByUserDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateResourceByUserDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateResourceByUserDate1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValidateResourceByUserDate1(System.Guid userId, System.DateTime startDate, System.DateTime endDate, int validateStatusFrom, int validateStatusTo) {
            this.Invoke("ValidateResourceByUserDate1", new object[] {
                        userId,
                        startDate,
                        endDate,
                        validateStatusFrom,
                        validateStatusTo});
        }
        
        /// <remarks/>
        public void ValidateResourceByUserDate1Async(System.Guid userId, System.DateTime startDate, System.DateTime endDate, int validateStatusFrom, int validateStatusTo) {
            this.ValidateResourceByUserDate1Async(userId, startDate, endDate, validateStatusFrom, validateStatusTo, null);
        }
        
        /// <remarks/>
        public void ValidateResourceByUserDate1Async(System.Guid userId, System.DateTime startDate, System.DateTime endDate, int validateStatusFrom, int validateStatusTo, object userState) {
            if ((this.ValidateResourceByUserDate1OperationCompleted == null)) {
                this.ValidateResourceByUserDate1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateResourceByUserDate1OperationCompleted);
            }
            this.InvokeAsync("ValidateResourceByUserDate1", new object[] {
                        userId,
                        startDate,
                        endDate,
                        validateStatusFrom,
                        validateStatusTo}, this.ValidateResourceByUserDate1OperationCompleted, userState);
        }
        
        private void OnValidateResourceByUserDate1OperationCompleted(object arg) {
            if ((this.ValidateResourceByUserDate1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateResourceByUserDate1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResourceSNByUserDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetResourceSNByUserDate(System.Guid userId, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetResourceSNByUserDate", new object[] {
                        userId,
                        startDate,
                        endDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceSNByUserDateAsync(System.Guid userId, System.DateTime startDate, System.DateTime endDate) {
            this.GetResourceSNByUserDateAsync(userId, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetResourceSNByUserDateAsync(System.Guid userId, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.GetResourceSNByUserDateOperationCompleted == null)) {
                this.GetResourceSNByUserDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceSNByUserDateOperationCompleted);
            }
            this.InvokeAsync("GetResourceSNByUserDate", new object[] {
                        userId,
                        startDate,
                        endDate}, this.GetResourceSNByUserDateOperationCompleted, userState);
        }
        
        private void OnGetResourceSNByUserDateOperationCompleted(object arg) {
            if ((this.GetResourceSNByUserDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceSNByUserDateCompleted(this, new GetResourceSNByUserDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateResourceByIDs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ValidateResourceByIDs(string[] ids, int validateStatus, string reason) {
            this.Invoke("ValidateResourceByIDs", new object[] {
                        ids,
                        validateStatus,
                        reason});
        }
        
        /// <remarks/>
        public void ValidateResourceByIDsAsync(string[] ids, int validateStatus, string reason) {
            this.ValidateResourceByIDsAsync(ids, validateStatus, reason, null);
        }
        
        /// <remarks/>
        public void ValidateResourceByIDsAsync(string[] ids, int validateStatus, string reason, object userState) {
            if ((this.ValidateResourceByIDsOperationCompleted == null)) {
                this.ValidateResourceByIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateResourceByIDsOperationCompleted);
            }
            this.InvokeAsync("ValidateResourceByIDs", new object[] {
                        ids,
                        validateStatus,
                        reason}, this.ValidateResourceByIDsOperationCompleted, userState);
        }
        
        private void OnValidateResourceByIDsOperationCompleted(object arg) {
            if ((this.ValidateResourceByIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateResourceByIDsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResourceSNByIDs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetResourceSNByIDs(string[] ids) {
            object[] results = this.Invoke("GetResourceSNByIDs", new object[] {
                        ids});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceSNByIDsAsync(string[] ids) {
            this.GetResourceSNByIDsAsync(ids, null);
        }
        
        /// <remarks/>
        public void GetResourceSNByIDsAsync(string[] ids, object userState) {
            if ((this.GetResourceSNByIDsOperationCompleted == null)) {
                this.GetResourceSNByIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceSNByIDsOperationCompleted);
            }
            this.InvokeAsync("GetResourceSNByIDs", new object[] {
                        ids}, this.GetResourceSNByIDsOperationCompleted, userState);
        }
        
        private void OnGetResourceSNByIDsOperationCompleted(object arg) {
            if ((this.GetResourceSNByIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceSNByIDsCompleted(this, new GetResourceSNByIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNotPassReason", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNotPassReason(string itemId) {
            object[] results = this.Invoke("GetNotPassReason", new object[] {
                        itemId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNotPassReasonAsync(string itemId) {
            this.GetNotPassReasonAsync(itemId, null);
        }
        
        /// <remarks/>
        public void GetNotPassReasonAsync(string itemId, object userState) {
            if ((this.GetNotPassReasonOperationCompleted == null)) {
                this.GetNotPassReasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNotPassReasonOperationCompleted);
            }
            this.InvokeAsync("GetNotPassReason", new object[] {
                        itemId}, this.GetNotPassReasonOperationCompleted, userState);
        }
        
        private void OnGetNotPassReasonOperationCompleted(object arg) {
            if ((this.GetNotPassReasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNotPassReasonCompleted(this, new GetNotPassReasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddResourceToCatalog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddResourceToCatalog(System.Guid[] catalogId, System.Guid itemId) {
            object[] results = this.Invoke("AddResourceToCatalog", new object[] {
                        catalogId,
                        itemId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddResourceToCatalogAsync(System.Guid[] catalogId, System.Guid itemId) {
            this.AddResourceToCatalogAsync(catalogId, itemId, null);
        }
        
        /// <remarks/>
        public void AddResourceToCatalogAsync(System.Guid[] catalogId, System.Guid itemId, object userState) {
            if ((this.AddResourceToCatalogOperationCompleted == null)) {
                this.AddResourceToCatalogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddResourceToCatalogOperationCompleted);
            }
            this.InvokeAsync("AddResourceToCatalog", new object[] {
                        catalogId,
                        itemId}, this.AddResourceToCatalogOperationCompleted, userState);
        }
        
        private void OnAddResourceToCatalogOperationCompleted(object arg) {
            if ((this.AddResourceToCatalogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddResourceToCatalogCompleted(this, new AddResourceToCatalogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchResourceOld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchResourceOld(string keyword, string beginDate, string endDate, string Catalogid, string Userid, int PageSize, int PageNum, ref int rowCount, string resourceType, string groupId) {
            object[] results = this.Invoke("SearchResourceOld", new object[] {
                        keyword,
                        beginDate,
                        endDate,
                        Catalogid,
                        Userid,
                        PageSize,
                        PageNum,
                        rowCount,
                        resourceType,
                        groupId});
            rowCount = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchResourceOldAsync(string keyword, string beginDate, string endDate, string Catalogid, string Userid, int PageSize, int PageNum, int rowCount, string resourceType, string groupId) {
            this.SearchResourceOldAsync(keyword, beginDate, endDate, Catalogid, Userid, PageSize, PageNum, rowCount, resourceType, groupId, null);
        }
        
        /// <remarks/>
        public void SearchResourceOldAsync(string keyword, string beginDate, string endDate, string Catalogid, string Userid, int PageSize, int PageNum, int rowCount, string resourceType, string groupId, object userState) {
            if ((this.SearchResourceOldOperationCompleted == null)) {
                this.SearchResourceOldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchResourceOldOperationCompleted);
            }
            this.InvokeAsync("SearchResourceOld", new object[] {
                        keyword,
                        beginDate,
                        endDate,
                        Catalogid,
                        Userid,
                        PageSize,
                        PageNum,
                        rowCount,
                        resourceType,
                        groupId}, this.SearchResourceOldOperationCompleted, userState);
        }
        
        private void OnSearchResourceOldOperationCompleted(object arg) {
            if ((this.SearchResourceOldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchResourceOldCompleted(this, new SearchResourceOldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchResource", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchResource(string keyword, string beginDate, string endDate, string Catalogid, string Userid, int PageSize, int PageNum, ref int rowCount, string resourceType, string groupId, int validateStatus) {
            object[] results = this.Invoke("SearchResource", new object[] {
                        keyword,
                        beginDate,
                        endDate,
                        Catalogid,
                        Userid,
                        PageSize,
                        PageNum,
                        rowCount,
                        resourceType,
                        groupId,
                        validateStatus});
            rowCount = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchResourceAsync(string keyword, string beginDate, string endDate, string Catalogid, string Userid, int PageSize, int PageNum, int rowCount, string resourceType, string groupId, int validateStatus) {
            this.SearchResourceAsync(keyword, beginDate, endDate, Catalogid, Userid, PageSize, PageNum, rowCount, resourceType, groupId, validateStatus, null);
        }
        
        /// <remarks/>
        public void SearchResourceAsync(string keyword, string beginDate, string endDate, string Catalogid, string Userid, int PageSize, int PageNum, int rowCount, string resourceType, string groupId, int validateStatus, object userState) {
            if ((this.SearchResourceOperationCompleted == null)) {
                this.SearchResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchResourceOperationCompleted);
            }
            this.InvokeAsync("SearchResource", new object[] {
                        keyword,
                        beginDate,
                        endDate,
                        Catalogid,
                        Userid,
                        PageSize,
                        PageNum,
                        rowCount,
                        resourceType,
                        groupId,
                        validateStatus}, this.SearchResourceOperationCompleted, userState);
        }
        
        private void OnSearchResourceOperationCompleted(object arg) {
            if ((this.SearchResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchResourceCompleted(this, new SearchResourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResourceByUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetResourceByUserID(string beginDate, string endDate, string Userid, int PageSize, int PageNum, ref int rowCount, string resourceType, int validateStatus) {
            object[] results = this.Invoke("GetResourceByUserID", new object[] {
                        beginDate,
                        endDate,
                        Userid,
                        PageSize,
                        PageNum,
                        rowCount,
                        resourceType,
                        validateStatus});
            rowCount = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceByUserIDAsync(string beginDate, string endDate, string Userid, int PageSize, int PageNum, int rowCount, string resourceType, int validateStatus) {
            this.GetResourceByUserIDAsync(beginDate, endDate, Userid, PageSize, PageNum, rowCount, resourceType, validateStatus, null);
        }
        
        /// <remarks/>
        public void GetResourceByUserIDAsync(string beginDate, string endDate, string Userid, int PageSize, int PageNum, int rowCount, string resourceType, int validateStatus, object userState) {
            if ((this.GetResourceByUserIDOperationCompleted == null)) {
                this.GetResourceByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetResourceByUserID", new object[] {
                        beginDate,
                        endDate,
                        Userid,
                        PageSize,
                        PageNum,
                        rowCount,
                        resourceType,
                        validateStatus}, this.GetResourceByUserIDOperationCompleted, userState);
        }
        
        private void OnGetResourceByUserIDOperationCompleted(object arg) {
            if ((this.GetResourceByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceByUserIDCompleted(this, new GetResourceByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResourceInfoByItemId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetResourceInfoByItemId(string itemid) {
            object[] results = this.Invoke("GetResourceInfoByItemId", new object[] {
                        itemid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceInfoByItemIdAsync(string itemid) {
            this.GetResourceInfoByItemIdAsync(itemid, null);
        }
        
        /// <remarks/>
        public void GetResourceInfoByItemIdAsync(string itemid, object userState) {
            if ((this.GetResourceInfoByItemIdOperationCompleted == null)) {
                this.GetResourceInfoByItemIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceInfoByItemIdOperationCompleted);
            }
            this.InvokeAsync("GetResourceInfoByItemId", new object[] {
                        itemid}, this.GetResourceInfoByItemIdOperationCompleted, userState);
        }
        
        private void OnGetResourceInfoByItemIdOperationCompleted(object arg) {
            if ((this.GetResourceInfoByItemIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceInfoByItemIdCompleted(this, new GetResourceInfoByItemIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResourceImagesDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetResourceImagesDetail(string id) {
            object[] results = this.Invoke("GetResourceImagesDetail", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceImagesDetailAsync(string id) {
            this.GetResourceImagesDetailAsync(id, null);
        }
        
        /// <remarks/>
        public void GetResourceImagesDetailAsync(string id, object userState) {
            if ((this.GetResourceImagesDetailOperationCompleted == null)) {
                this.GetResourceImagesDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceImagesDetailOperationCompleted);
            }
            this.InvokeAsync("GetResourceImagesDetail", new object[] {
                        id}, this.GetResourceImagesDetailOperationCompleted, userState);
        }
        
        private void OnGetResourceImagesDetailOperationCompleted(object arg) {
            if ((this.GetResourceImagesDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceImagesDetailCompleted(this, new GetResourceImagesDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResourceInfoBySN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetResourceInfoBySN(string sn) {
            object[] results = this.Invoke("GetResourceInfoBySN", new object[] {
                        sn});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceInfoBySNAsync(string sn) {
            this.GetResourceInfoBySNAsync(sn, null);
        }
        
        /// <remarks/>
        public void GetResourceInfoBySNAsync(string sn, object userState) {
            if ((this.GetResourceInfoBySNOperationCompleted == null)) {
                this.GetResourceInfoBySNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceInfoBySNOperationCompleted);
            }
            this.InvokeAsync("GetResourceInfoBySN", new object[] {
                        sn}, this.GetResourceInfoBySNOperationCompleted, userState);
        }
        
        private void OnGetResourceInfoBySNOperationCompleted(object arg) {
            if ((this.GetResourceInfoBySNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceInfoBySNCompleted(this, new GetResourceInfoBySNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDownMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteDownMessage(int logId) {
            object[] results = this.Invoke("DeleteDownMessage", new object[] {
                        logId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDownMessageAsync(int logId) {
            this.DeleteDownMessageAsync(logId, null);
        }
        
        /// <remarks/>
        public void DeleteDownMessageAsync(int logId, object userState) {
            if ((this.DeleteDownMessageOperationCompleted == null)) {
                this.DeleteDownMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDownMessageOperationCompleted);
            }
            this.InvokeAsync("DeleteDownMessage", new object[] {
                        logId}, this.DeleteDownMessageOperationCompleted, userState);
        }
        
        private void OnDeleteDownMessageOperationCompleted(object arg) {
            if ((this.DeleteDownMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDownMessageCompleted(this, new DeleteDownMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDownLoadMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDownLoadMessage(string username, System.DateTime beginDate, System.DateTime endDate) {
            object[] results = this.Invoke("GetDownLoadMessage", new object[] {
                        username,
                        beginDate,
                        endDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDownLoadMessageAsync(string username, System.DateTime beginDate, System.DateTime endDate) {
            this.GetDownLoadMessageAsync(username, beginDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetDownLoadMessageAsync(string username, System.DateTime beginDate, System.DateTime endDate, object userState) {
            if ((this.GetDownLoadMessageOperationCompleted == null)) {
                this.GetDownLoadMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDownLoadMessageOperationCompleted);
            }
            this.InvokeAsync("GetDownLoadMessage", new object[] {
                        username,
                        beginDate,
                        endDate}, this.GetDownLoadMessageOperationCompleted, userState);
        }
        
        private void OnGetDownLoadMessageOperationCompleted(object arg) {
            if ((this.GetDownLoadMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDownLoadMessageCompleted(this, new GetDownLoadMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDownloadMessageByLoginName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDownloadMessageByLoginName(string username) {
            object[] results = this.Invoke("GetDownloadMessageByLoginName", new object[] {
                        username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDownloadMessageByLoginNameAsync(string username) {
            this.GetDownloadMessageByLoginNameAsync(username, null);
        }
        
        /// <remarks/>
        public void GetDownloadMessageByLoginNameAsync(string username, object userState) {
            if ((this.GetDownloadMessageByLoginNameOperationCompleted == null)) {
                this.GetDownloadMessageByLoginNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDownloadMessageByLoginNameOperationCompleted);
            }
            this.InvokeAsync("GetDownloadMessageByLoginName", new object[] {
                        username}, this.GetDownloadMessageByLoginNameOperationCompleted, userState);
        }
        
        private void OnGetDownloadMessageByLoginNameOperationCompleted(object arg) {
            if ((this.GetDownloadMessageByLoginNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDownloadMessageByLoginNameCompleted(this, new GetDownloadMessageByLoginNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Production_Hires_Down_Log", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Production_Hires_Down_Log(string filaName, string fileType, string username, string usage, string enduser, string folder, bool Errflag, string resourceType) {
            this.Invoke("Production_Hires_Down_Log", new object[] {
                        filaName,
                        fileType,
                        username,
                        usage,
                        enduser,
                        folder,
                        Errflag,
                        resourceType});
        }
        
        /// <remarks/>
        public void Production_Hires_Down_LogAsync(string filaName, string fileType, string username, string usage, string enduser, string folder, bool Errflag, string resourceType) {
            this.Production_Hires_Down_LogAsync(filaName, fileType, username, usage, enduser, folder, Errflag, resourceType, null);
        }
        
        /// <remarks/>
        public void Production_Hires_Down_LogAsync(string filaName, string fileType, string username, string usage, string enduser, string folder, bool Errflag, string resourceType, object userState) {
            if ((this.Production_Hires_Down_LogOperationCompleted == null)) {
                this.Production_Hires_Down_LogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProduction_Hires_Down_LogOperationCompleted);
            }
            this.InvokeAsync("Production_Hires_Down_Log", new object[] {
                        filaName,
                        fileType,
                        username,
                        usage,
                        enduser,
                        folder,
                        Errflag,
                        resourceType}, this.Production_Hires_Down_LogOperationCompleted, userState);
        }
        
        private void OnProduction_Hires_Down_LogOperationCompleted(object arg) {
            if ((this.Production_Hires_Down_LogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Production_Hires_Down_LogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/insertResourceAttributes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void insertResourceAttributes(string sn, [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] DictionaryEntry[] de) {
            this.Invoke("insertResourceAttributes", new object[] {
                        sn,
                        de});
        }
        
        /// <remarks/>
        public void insertResourceAttributesAsync(string sn, DictionaryEntry[] de) {
            this.insertResourceAttributesAsync(sn, de, null);
        }
        
        /// <remarks/>
        public void insertResourceAttributesAsync(string sn, DictionaryEntry[] de, object userState) {
            if ((this.insertResourceAttributesOperationCompleted == null)) {
                this.insertResourceAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OninsertResourceAttributesOperationCompleted);
            }
            this.InvokeAsync("insertResourceAttributes", new object[] {
                        sn,
                        de}, this.insertResourceAttributesOperationCompleted, userState);
        }
        
        private void OninsertResourceAttributesOperationCompleted(object arg) {
            if ((this.insertResourceAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.insertResourceAttributesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResourceCatalogByItemId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetResourceCatalogByItemId(string itemId) {
            object[] results = this.Invoke("GetResourceCatalogByItemId", new object[] {
                        itemId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceCatalogByItemIdAsync(string itemId) {
            this.GetResourceCatalogByItemIdAsync(itemId, null);
        }
        
        /// <remarks/>
        public void GetResourceCatalogByItemIdAsync(string itemId, object userState) {
            if ((this.GetResourceCatalogByItemIdOperationCompleted == null)) {
                this.GetResourceCatalogByItemIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceCatalogByItemIdOperationCompleted);
            }
            this.InvokeAsync("GetResourceCatalogByItemId", new object[] {
                        itemId}, this.GetResourceCatalogByItemIdOperationCompleted, userState);
        }
        
        private void OnGetResourceCatalogByItemIdOperationCompleted(object arg) {
            if ((this.GetResourceCatalogByItemIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceCatalogByItemIdCompleted(this, new GetResourceCatalogByItemIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResourcesByOrderId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetResourcesByOrderId(string orderId) {
            object[] results = this.Invoke("GetResourcesByOrderId", new object[] {
                        orderId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourcesByOrderIdAsync(string orderId) {
            this.GetResourcesByOrderIdAsync(orderId, null);
        }
        
        /// <remarks/>
        public void GetResourcesByOrderIdAsync(string orderId, object userState) {
            if ((this.GetResourcesByOrderIdOperationCompleted == null)) {
                this.GetResourcesByOrderIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourcesByOrderIdOperationCompleted);
            }
            this.InvokeAsync("GetResourcesByOrderId", new object[] {
                        orderId}, this.GetResourcesByOrderIdOperationCompleted, userState);
        }
        
        private void OnGetResourcesByOrderIdOperationCompleted(object arg) {
            if ((this.GetResourcesByOrderIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourcesByOrderIdCompleted(this, new GetResourcesByOrderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResourcesByViewCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetResourcesByViewCount(System.DateTime startDate, System.DateTime endDate, int pageSize, int pageNum, string resourceType) {
            object[] results = this.Invoke("GetResourcesByViewCount", new object[] {
                        startDate,
                        endDate,
                        pageSize,
                        pageNum,
                        resourceType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourcesByViewCountAsync(System.DateTime startDate, System.DateTime endDate, int pageSize, int pageNum, string resourceType) {
            this.GetResourcesByViewCountAsync(startDate, endDate, pageSize, pageNum, resourceType, null);
        }
        
        /// <remarks/>
        public void GetResourcesByViewCountAsync(System.DateTime startDate, System.DateTime endDate, int pageSize, int pageNum, string resourceType, object userState) {
            if ((this.GetResourcesByViewCountOperationCompleted == null)) {
                this.GetResourcesByViewCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourcesByViewCountOperationCompleted);
            }
            this.InvokeAsync("GetResourcesByViewCount", new object[] {
                        startDate,
                        endDate,
                        pageSize,
                        pageNum,
                        resourceType}, this.GetResourcesByViewCountOperationCompleted, userState);
        }
        
        private void OnGetResourcesByViewCountOperationCompleted(object arg) {
            if ((this.GetResourcesByViewCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourcesByViewCountCompleted(this, new GetResourcesByViewCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResourcesByDownloadCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetResourcesByDownloadCount(System.DateTime startDate, System.DateTime endDate, int pageSize, int pageNum, string resourceType) {
            object[] results = this.Invoke("GetResourcesByDownloadCount", new object[] {
                        startDate,
                        endDate,
                        pageSize,
                        pageNum,
                        resourceType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourcesByDownloadCountAsync(System.DateTime startDate, System.DateTime endDate, int pageSize, int pageNum, string resourceType) {
            this.GetResourcesByDownloadCountAsync(startDate, endDate, pageSize, pageNum, resourceType, null);
        }
        
        /// <remarks/>
        public void GetResourcesByDownloadCountAsync(System.DateTime startDate, System.DateTime endDate, int pageSize, int pageNum, string resourceType, object userState) {
            if ((this.GetResourcesByDownloadCountOperationCompleted == null)) {
                this.GetResourcesByDownloadCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourcesByDownloadCountOperationCompleted);
            }
            this.InvokeAsync("GetResourcesByDownloadCount", new object[] {
                        startDate,
                        endDate,
                        pageSize,
                        pageNum,
                        resourceType}, this.GetResourcesByDownloadCountOperationCompleted, userState);
        }
        
        private void OnGetResourcesByDownloadCountOperationCompleted(object arg) {
            if ((this.GetResourcesByDownloadCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourcesByDownloadCountCompleted(this, new GetResourcesByDownloadCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResourceUploadLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetResourceUploadLog(System.DateTime startDate, System.DateTime endDate, int pageSize, int pageNum, string userId) {
            object[] results = this.Invoke("GetResourceUploadLog", new object[] {
                        startDate,
                        endDate,
                        pageSize,
                        pageNum,
                        userId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourceUploadLogAsync(System.DateTime startDate, System.DateTime endDate, int pageSize, int pageNum, string userId) {
            this.GetResourceUploadLogAsync(startDate, endDate, pageSize, pageNum, userId, null);
        }
        
        /// <remarks/>
        public void GetResourceUploadLogAsync(System.DateTime startDate, System.DateTime endDate, int pageSize, int pageNum, string userId, object userState) {
            if ((this.GetResourceUploadLogOperationCompleted == null)) {
                this.GetResourceUploadLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourceUploadLogOperationCompleted);
            }
            this.InvokeAsync("GetResourceUploadLog", new object[] {
                        startDate,
                        endDate,
                        pageSize,
                        pageNum,
                        userId}, this.GetResourceUploadLogOperationCompleted, userState);
        }
        
        private void OnGetResourceUploadLogOperationCompleted(object arg) {
            if ((this.GetResourceUploadLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourceUploadLogCompleted(this, new GetResourceUploadLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddAttach", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddAttach(string itemId, string fileName, long fileLength) {
            object[] results = this.Invoke("AddAttach", new object[] {
                        itemId,
                        fileName,
                        fileLength});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddAttachAsync(string itemId, string fileName, long fileLength) {
            this.AddAttachAsync(itemId, fileName, fileLength, null);
        }
        
        /// <remarks/>
        public void AddAttachAsync(string itemId, string fileName, long fileLength, object userState) {
            if ((this.AddAttachOperationCompleted == null)) {
                this.AddAttachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAttachOperationCompleted);
            }
            this.InvokeAsync("AddAttach", new object[] {
                        itemId,
                        fileName,
                        fileLength}, this.AddAttachOperationCompleted, userState);
        }
        
        private void OnAddAttachOperationCompleted(object arg) {
            if ((this.AddAttachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAttachCompleted(this, new AddAttachCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAttachList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAttachList(System.Guid itemId) {
            object[] results = this.Invoke("GetAttachList", new object[] {
                        itemId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachListAsync(System.Guid itemId) {
            this.GetAttachListAsync(itemId, null);
        }
        
        /// <remarks/>
        public void GetAttachListAsync(System.Guid itemId, object userState) {
            if ((this.GetAttachListOperationCompleted == null)) {
                this.GetAttachListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachListOperationCompleted);
            }
            this.InvokeAsync("GetAttachList", new object[] {
                        itemId}, this.GetAttachListOperationCompleted, userState);
        }
        
        private void OnGetAttachListOperationCompleted(object arg) {
            if ((this.GetAttachListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachListCompleted(this, new GetAttachListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAttach", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAttach(System.Guid attId) {
            this.Invoke("DeleteAttach", new object[] {
                        attId});
        }
        
        /// <remarks/>
        public void DeleteAttachAsync(System.Guid attId) {
            this.DeleteAttachAsync(attId, null);
        }
        
        /// <remarks/>
        public void DeleteAttachAsync(System.Guid attId, object userState) {
            if ((this.DeleteAttachOperationCompleted == null)) {
                this.DeleteAttachOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAttachOperationCompleted);
            }
            this.InvokeAsync("DeleteAttach", new object[] {
                        attId}, this.DeleteAttachOperationCompleted, userState);
        }
        
        private void OnDeleteAttachOperationCompleted(object arg) {
            if ((this.DeleteAttachCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAttachCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateResourceViewCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateResourceViewCount(string id) {
            this.Invoke("UpdateResourceViewCount", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void UpdateResourceViewCountAsync(string id) {
            this.UpdateResourceViewCountAsync(id, null);
        }
        
        /// <remarks/>
        public void UpdateResourceViewCountAsync(string id, object userState) {
            if ((this.UpdateResourceViewCountOperationCompleted == null)) {
                this.UpdateResourceViewCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateResourceViewCountOperationCompleted);
            }
            this.InvokeAsync("UpdateResourceViewCount", new object[] {
                        id}, this.UpdateResourceViewCountOperationCompleted, userState);
        }
        
        private void OnUpdateResourceViewCountOperationCompleted(object arg) {
            if ((this.UpdateResourceViewCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateResourceViewCountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteResource", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteResource(System.Guid itemId) {
            object[] results = this.Invoke("DeleteResource", new object[] {
                        itemId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteResourceAsync(System.Guid itemId) {
            this.DeleteResourceAsync(itemId, null);
        }
        
        /// <remarks/>
        public void DeleteResourceAsync(System.Guid itemId, object userState) {
            if ((this.DeleteResourceOperationCompleted == null)) {
                this.DeleteResourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteResourceOperationCompleted);
            }
            this.InvokeAsync("DeleteResource", new object[] {
                        itemId}, this.DeleteResourceOperationCompleted, userState);
        }
        
        private void OnDeleteResourceOperationCompleted(object arg) {
            if ((this.DeleteResourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteResourceCompleted(this, new DeleteResourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyUploadStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMyUploadStatus(System.DateTime startDate, System.DateTime endDate, System.Guid userid) {
            object[] results = this.Invoke("GetMyUploadStatus", new object[] {
                        startDate,
                        endDate,
                        userid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyUploadStatusAsync(System.DateTime startDate, System.DateTime endDate, System.Guid userid) {
            this.GetMyUploadStatusAsync(startDate, endDate, userid, null);
        }
        
        /// <remarks/>
        public void GetMyUploadStatusAsync(System.DateTime startDate, System.DateTime endDate, System.Guid userid, object userState) {
            if ((this.GetMyUploadStatusOperationCompleted == null)) {
                this.GetMyUploadStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyUploadStatusOperationCompleted);
            }
            this.InvokeAsync("GetMyUploadStatus", new object[] {
                        startDate,
                        endDate,
                        userid}, this.GetMyUploadStatusOperationCompleted, userState);
        }
        
        private void OnGetMyUploadStatusOperationCompleted(object arg) {
            if ((this.GetMyUploadStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyUploadStatusCompleted(this, new GetMyUploadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewResourceStatByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNewResourceStatByUser(System.Guid userid) {
            object[] results = this.Invoke("GetNewResourceStatByUser", new object[] {
                        userid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewResourceStatByUserAsync(System.Guid userid) {
            this.GetNewResourceStatByUserAsync(userid, null);
        }
        
        /// <remarks/>
        public void GetNewResourceStatByUserAsync(System.Guid userid, object userState) {
            if ((this.GetNewResourceStatByUserOperationCompleted == null)) {
                this.GetNewResourceStatByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewResourceStatByUserOperationCompleted);
            }
            this.InvokeAsync("GetNewResourceStatByUser", new object[] {
                        userid}, this.GetNewResourceStatByUserOperationCompleted, userState);
        }
        
        private void OnGetNewResourceStatByUserOperationCompleted(object arg) {
            if ((this.GetNewResourceStatByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewResourceStatByUserCompleted(this, new GetNewResourceStatByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNotPassResources", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNotPassResources(string userName, System.DateTime startDate, System.DateTime endDate, int pageSize, int pageIndex) {
            object[] results = this.Invoke("GetNotPassResources", new object[] {
                        userName,
                        startDate,
                        endDate,
                        pageSize,
                        pageIndex});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNotPassResourcesAsync(string userName, System.DateTime startDate, System.DateTime endDate, int pageSize, int pageIndex) {
            this.GetNotPassResourcesAsync(userName, startDate, endDate, pageSize, pageIndex, null);
        }
        
        /// <remarks/>
        public void GetNotPassResourcesAsync(string userName, System.DateTime startDate, System.DateTime endDate, int pageSize, int pageIndex, object userState) {
            if ((this.GetNotPassResourcesOperationCompleted == null)) {
                this.GetNotPassResourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNotPassResourcesOperationCompleted);
            }
            this.InvokeAsync("GetNotPassResources", new object[] {
                        userName,
                        startDate,
                        endDate,
                        pageSize,
                        pageIndex}, this.GetNotPassResourcesOperationCompleted, userState);
        }
        
        private void OnGetNotPassResourcesOperationCompleted(object arg) {
            if ((this.GetNotPassResourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNotPassResourcesCompleted(this, new GetNotPassResourcesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsAlertAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsAlertAdmin(System.Guid userId, string isSuperAdmin) {
            object[] results = this.Invoke("IsAlertAdmin", new object[] {
                        userId,
                        isSuperAdmin});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsAlertAdminAsync(System.Guid userId, string isSuperAdmin) {
            this.IsAlertAdminAsync(userId, isSuperAdmin, null);
        }
        
        /// <remarks/>
        public void IsAlertAdminAsync(System.Guid userId, string isSuperAdmin, object userState) {
            if ((this.IsAlertAdminOperationCompleted == null)) {
                this.IsAlertAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAlertAdminOperationCompleted);
            }
            this.InvokeAsync("IsAlertAdmin", new object[] {
                        userId,
                        isSuperAdmin}, this.IsAlertAdminOperationCompleted, userState);
        }
        
        private void OnIsAlertAdminOperationCompleted(object arg) {
            if ((this.IsAlertAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAlertAdminCompleted(this, new IsAlertAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMyLightBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMyLightBox(System.Guid userId) {
            object[] results = this.Invoke("GetMyLightBox", new object[] {
                        userId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyLightBoxAsync(System.Guid userId) {
            this.GetMyLightBoxAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetMyLightBoxAsync(System.Guid userId, object userState) {
            if ((this.GetMyLightBoxOperationCompleted == null)) {
                this.GetMyLightBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyLightBoxOperationCompleted);
            }
            this.InvokeAsync("GetMyLightBox", new object[] {
                        userId}, this.GetMyLightBoxOperationCompleted, userState);
        }
        
        private void OnGetMyLightBoxOperationCompleted(object arg) {
            if ((this.GetMyLightBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyLightBoxCompleted(this, new GetMyLightBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResourcesByLightBoxID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetResourcesByLightBoxID(System.Guid id, int pageSize, int pageIndex) {
            object[] results = this.Invoke("GetResourcesByLightBoxID", new object[] {
                        id,
                        pageSize,
                        pageIndex});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResourcesByLightBoxIDAsync(System.Guid id, int pageSize, int pageIndex) {
            this.GetResourcesByLightBoxIDAsync(id, pageSize, pageIndex, null);
        }
        
        /// <remarks/>
        public void GetResourcesByLightBoxIDAsync(System.Guid id, int pageSize, int pageIndex, object userState) {
            if ((this.GetResourcesByLightBoxIDOperationCompleted == null)) {
                this.GetResourcesByLightBoxIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResourcesByLightBoxIDOperationCompleted);
            }
            this.InvokeAsync("GetResourcesByLightBoxID", new object[] {
                        id,
                        pageSize,
                        pageIndex}, this.GetResourcesByLightBoxIDOperationCompleted, userState);
        }
        
        private void OnGetResourcesByLightBoxIDOperationCompleted(object arg) {
            if ((this.GetResourcesByLightBoxIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResourcesByLightBoxIDCompleted(this, new GetResourcesByLightBoxIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddLightBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddLightBox(string title, System.Guid userId, string zipFilePath, System.DateTime zipFileExpireDate) {
            object[] results = this.Invoke("AddLightBox", new object[] {
                        title,
                        userId,
                        zipFilePath,
                        zipFileExpireDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddLightBoxAsync(string title, System.Guid userId, string zipFilePath, System.DateTime zipFileExpireDate) {
            this.AddLightBoxAsync(title, userId, zipFilePath, zipFileExpireDate, null);
        }
        
        /// <remarks/>
        public void AddLightBoxAsync(string title, System.Guid userId, string zipFilePath, System.DateTime zipFileExpireDate, object userState) {
            if ((this.AddLightBoxOperationCompleted == null)) {
                this.AddLightBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLightBoxOperationCompleted);
            }
            this.InvokeAsync("AddLightBox", new object[] {
                        title,
                        userId,
                        zipFilePath,
                        zipFileExpireDate}, this.AddLightBoxOperationCompleted, userState);
        }
        
        private void OnAddLightBoxOperationCompleted(object arg) {
            if ((this.AddLightBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLightBoxCompleted(this, new AddLightBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditLightBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EditLightBox(System.Guid id, string title, string zipFilePath, System.DateTime zipFileExpireDate) {
            object[] results = this.Invoke("EditLightBox", new object[] {
                        id,
                        title,
                        zipFilePath,
                        zipFileExpireDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EditLightBoxAsync(System.Guid id, string title, string zipFilePath, System.DateTime zipFileExpireDate) {
            this.EditLightBoxAsync(id, title, zipFilePath, zipFileExpireDate, null);
        }
        
        /// <remarks/>
        public void EditLightBoxAsync(System.Guid id, string title, string zipFilePath, System.DateTime zipFileExpireDate, object userState) {
            if ((this.EditLightBoxOperationCompleted == null)) {
                this.EditLightBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditLightBoxOperationCompleted);
            }
            this.InvokeAsync("EditLightBox", new object[] {
                        id,
                        title,
                        zipFilePath,
                        zipFileExpireDate}, this.EditLightBoxOperationCompleted, userState);
        }
        
        private void OnEditLightBoxOperationCompleted(object arg) {
            if ((this.EditLightBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditLightBoxCompleted(this, new EditLightBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelLightBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelLightBox(System.Guid id) {
            object[] results = this.Invoke("DelLightBox", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelLightBoxAsync(System.Guid id) {
            this.DelLightBoxAsync(id, null);
        }
        
        /// <remarks/>
        public void DelLightBoxAsync(System.Guid id, object userState) {
            if ((this.DelLightBoxOperationCompleted == null)) {
                this.DelLightBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelLightBoxOperationCompleted);
            }
            this.InvokeAsync("DelLightBox", new object[] {
                        id}, this.DelLightBoxOperationCompleted, userState);
        }
        
        private void OnDelLightBoxOperationCompleted(object arg) {
            if ((this.DelLightBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelLightBoxCompleted(this, new DelLightBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddToLightBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddToLightBox(System.Guid resourceId, System.Guid lightboxId) {
            object[] results = this.Invoke("AddToLightBox", new object[] {
                        resourceId,
                        lightboxId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddToLightBoxAsync(System.Guid resourceId, System.Guid lightboxId) {
            this.AddToLightBoxAsync(resourceId, lightboxId, null);
        }
        
        /// <remarks/>
        public void AddToLightBoxAsync(System.Guid resourceId, System.Guid lightboxId, object userState) {
            if ((this.AddToLightBoxOperationCompleted == null)) {
                this.AddToLightBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToLightBoxOperationCompleted);
            }
            this.InvokeAsync("AddToLightBox", new object[] {
                        resourceId,
                        lightboxId}, this.AddToLightBoxOperationCompleted, userState);
        }
        
        private void OnAddToLightBoxOperationCompleted(object arg) {
            if ((this.AddToLightBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToLightBoxCompleted(this, new AddToLightBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelFromLightBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelFromLightBox(System.Guid resourceId, System.Guid lightboxId) {
            object[] results = this.Invoke("DelFromLightBox", new object[] {
                        resourceId,
                        lightboxId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelFromLightBoxAsync(System.Guid resourceId, System.Guid lightboxId) {
            this.DelFromLightBoxAsync(resourceId, lightboxId, null);
        }
        
        /// <remarks/>
        public void DelFromLightBoxAsync(System.Guid resourceId, System.Guid lightboxId, object userState) {
            if ((this.DelFromLightBoxOperationCompleted == null)) {
                this.DelFromLightBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelFromLightBoxOperationCompleted);
            }
            this.InvokeAsync("DelFromLightBox", new object[] {
                        resourceId,
                        lightboxId}, this.DelFromLightBoxOperationCompleted, userState);
        }
        
        private void OnDelFromLightBoxOperationCompleted(object arg) {
            if ((this.DelFromLightBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelFromLightBoxCompleted(this, new DelFromLightBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClearLightBox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ClearLightBox(System.Guid lightboxId) {
            object[] results = this.Invoke("ClearLightBox", new object[] {
                        lightboxId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ClearLightBoxAsync(System.Guid lightboxId) {
            this.ClearLightBoxAsync(lightboxId, null);
        }
        
        /// <remarks/>
        public void ClearLightBoxAsync(System.Guid lightboxId, object userState) {
            if ((this.ClearLightBoxOperationCompleted == null)) {
                this.ClearLightBoxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearLightBoxOperationCompleted);
            }
            this.InvokeAsync("ClearLightBox", new object[] {
                        lightboxId}, this.ClearLightBoxOperationCompleted, userState);
        }
        
        private void OnClearLightBoxOperationCompleted(object arg) {
            if ((this.ClearLightBoxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearLightBoxCompleted(this, new ClearLightBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateDefaultLightbox", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateDefaultLightbox(System.Guid userId) {
            object[] results = this.Invoke("CreateDefaultLightbox", new object[] {
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDefaultLightboxAsync(System.Guid userId) {
            this.CreateDefaultLightboxAsync(userId, null);
        }
        
        /// <remarks/>
        public void CreateDefaultLightboxAsync(System.Guid userId, object userState) {
            if ((this.CreateDefaultLightboxOperationCompleted == null)) {
                this.CreateDefaultLightboxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDefaultLightboxOperationCompleted);
            }
            this.InvokeAsync("CreateDefaultLightbox", new object[] {
                        userId}, this.CreateDefaultLightboxOperationCompleted, userState);
        }
        
        private void OnCreateDefaultLightboxOperationCompleted(object arg) {
            if ((this.CreateDefaultLightboxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDefaultLightboxCompleted(this, new CreateDefaultLightboxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DictionaryEntry {
        
        private object keyField;
        
        private object valueField;
        
        /// <remarks/>
        public object Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetResourceStaticCompletedEventHandler(object sender, GetResourceStaticCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceStaticCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceStaticCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDownloadStaticCompletedEventHandler(object sender, GetDownloadStaticCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDownloadStaticCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDownloadStaticCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ValidateResourceByUserDateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ValidateResourceByUserDate1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetResourceSNByUserDateCompletedEventHandler(object sender, GetResourceSNByUserDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceSNByUserDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceSNByUserDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ValidateResourceByIDsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetResourceSNByIDsCompletedEventHandler(object sender, GetResourceSNByIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceSNByIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceSNByIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNotPassReasonCompletedEventHandler(object sender, GetNotPassReasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNotPassReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNotPassReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddResourceToCatalogCompletedEventHandler(object sender, AddResourceToCatalogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddResourceToCatalogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddResourceToCatalogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchResourceOldCompletedEventHandler(object sender, SearchResourceOldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchResourceOldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchResourceOldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int rowCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchResourceCompletedEventHandler(object sender, SearchResourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int rowCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetResourceByUserIDCompletedEventHandler(object sender, GetResourceByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int rowCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetResourceInfoByItemIdCompletedEventHandler(object sender, GetResourceInfoByItemIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceInfoByItemIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceInfoByItemIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetResourceImagesDetailCompletedEventHandler(object sender, GetResourceImagesDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceImagesDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceImagesDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetResourceInfoBySNCompletedEventHandler(object sender, GetResourceInfoBySNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceInfoBySNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceInfoBySNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteDownMessageCompletedEventHandler(object sender, DeleteDownMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDownMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDownMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDownLoadMessageCompletedEventHandler(object sender, GetDownLoadMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDownLoadMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDownLoadMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDownloadMessageByLoginNameCompletedEventHandler(object sender, GetDownloadMessageByLoginNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDownloadMessageByLoginNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDownloadMessageByLoginNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Production_Hires_Down_LogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void insertResourceAttributesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetResourceCatalogByItemIdCompletedEventHandler(object sender, GetResourceCatalogByItemIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceCatalogByItemIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceCatalogByItemIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetResourcesByOrderIdCompletedEventHandler(object sender, GetResourcesByOrderIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourcesByOrderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourcesByOrderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetResourcesByViewCountCompletedEventHandler(object sender, GetResourcesByViewCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourcesByViewCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourcesByViewCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetResourcesByDownloadCountCompletedEventHandler(object sender, GetResourcesByDownloadCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourcesByDownloadCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourcesByDownloadCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetResourceUploadLogCompletedEventHandler(object sender, GetResourceUploadLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourceUploadLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourceUploadLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddAttachCompletedEventHandler(object sender, AddAttachCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAttachCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAttachCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAttachListCompletedEventHandler(object sender, GetAttachListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteAttachCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateResourceViewCountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteResourceCompletedEventHandler(object sender, DeleteResourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteResourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteResourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMyUploadStatusCompletedEventHandler(object sender, GetMyUploadStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyUploadStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyUploadStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNewResourceStatByUserCompletedEventHandler(object sender, GetNewResourceStatByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewResourceStatByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewResourceStatByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNotPassResourcesCompletedEventHandler(object sender, GetNotPassResourcesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNotPassResourcesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNotPassResourcesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsAlertAdminCompletedEventHandler(object sender, IsAlertAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAlertAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAlertAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMyLightBoxCompletedEventHandler(object sender, GetMyLightBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyLightBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyLightBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetResourcesByLightBoxIDCompletedEventHandler(object sender, GetResourcesByLightBoxIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResourcesByLightBoxIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResourcesByLightBoxIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddLightBoxCompletedEventHandler(object sender, AddLightBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLightBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLightBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditLightBoxCompletedEventHandler(object sender, EditLightBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditLightBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditLightBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DelLightBoxCompletedEventHandler(object sender, DelLightBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelLightBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelLightBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddToLightBoxCompletedEventHandler(object sender, AddToLightBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToLightBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToLightBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DelFromLightBoxCompletedEventHandler(object sender, DelFromLightBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelFromLightBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelFromLightBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ClearLightBoxCompletedEventHandler(object sender, ClearLightBoxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearLightBoxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearLightBoxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateDefaultLightboxCompletedEventHandler(object sender, CreateDefaultLightboxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDefaultLightboxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDefaultLightboxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591