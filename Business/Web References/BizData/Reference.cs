//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.239
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.239 版自动生成。
// 
#pragma warning disable 1591

namespace QJVRMS.Business.BizData {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BizServiceSoap", Namespace="http://qjDataAccess.org/")]
    public partial class BizService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetNewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteNewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopLatestImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopImagesOfCatalogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageSeqOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageSeqByServerDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVideoSeqOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSysSeqOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddADUsersToDBOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BizService() {
            this.Url = global::QJVRMS.Business.Properties.Settings.Default.QJVRMS_Business_BizData_BizService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetNewsCompletedEventHandler GetNewsCompleted;
        
        /// <remarks/>
        public event GetNewsListCompletedEventHandler GetNewsListCompleted;
        
        /// <remarks/>
        public event UpdateNewsCompletedEventHandler UpdateNewsCompleted;
        
        /// <remarks/>
        public event DeleteNewsCompletedEventHandler DeleteNewsCompleted;
        
        /// <remarks/>
        public event CreateNewsCompletedEventHandler CreateNewsCompleted;
        
        /// <remarks/>
        public event GetTopLatestImageCompletedEventHandler GetTopLatestImageCompleted;
        
        /// <remarks/>
        public event GetTopImagesOfCatalogCompletedEventHandler GetTopImagesOfCatalogCompleted;
        
        /// <remarks/>
        public event GetSNCompletedEventHandler GetSNCompleted;
        
        /// <remarks/>
        public event GetImageSeqCompletedEventHandler GetImageSeqCompleted;
        
        /// <remarks/>
        public event GetImageSeqByServerDateCompletedEventHandler GetImageSeqByServerDateCompleted;
        
        /// <remarks/>
        public event GetVideoSeqCompletedEventHandler GetVideoSeqCompleted;
        
        /// <remarks/>
        public event GetSysSeqCompletedEventHandler GetSysSeqCompleted;
        
        /// <remarks/>
        public event AddADUsersToDBCompletedEventHandler AddADUsersToDBCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/GetNews", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetNews(System.Guid newsId) {
            object[] results = this.Invoke("GetNews", new object[] {
                        newsId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsAsync(System.Guid newsId) {
            this.GetNewsAsync(newsId, null);
        }
        
        /// <remarks/>
        public void GetNewsAsync(System.Guid newsId, object userState) {
            if ((this.GetNewsOperationCompleted == null)) {
                this.GetNewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsOperationCompleted);
            }
            this.InvokeAsync("GetNews", new object[] {
                        newsId}, this.GetNewsOperationCompleted, userState);
        }
        
        private void OnGetNewsOperationCompleted(object arg) {
            if ((this.GetNewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsCompleted(this, new GetNewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/GetNewsList", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetNewsList(string title, char ntype) {
            object[] results = this.Invoke("GetNewsList", new object[] {
                        title,
                        ntype});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsListAsync(string title, char ntype) {
            this.GetNewsListAsync(title, ntype, null);
        }
        
        /// <remarks/>
        public void GetNewsListAsync(string title, char ntype, object userState) {
            if ((this.GetNewsListOperationCompleted == null)) {
                this.GetNewsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsListOperationCompleted);
            }
            this.InvokeAsync("GetNewsList", new object[] {
                        title,
                        ntype}, this.GetNewsListOperationCompleted, userState);
        }
        
        private void OnGetNewsListOperationCompleted(object arg) {
            if ((this.GetNewsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsListCompleted(this, new GetNewsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/UpdateNews", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateNews(System.Guid newsId, string title, string content, char isVal, char isTop, char ntype) {
            object[] results = this.Invoke("UpdateNews", new object[] {
                        newsId,
                        title,
                        content,
                        isVal,
                        isTop,
                        ntype});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNewsAsync(System.Guid newsId, string title, string content, char isVal, char isTop, char ntype) {
            this.UpdateNewsAsync(newsId, title, content, isVal, isTop, ntype, null);
        }
        
        /// <remarks/>
        public void UpdateNewsAsync(System.Guid newsId, string title, string content, char isVal, char isTop, char ntype, object userState) {
            if ((this.UpdateNewsOperationCompleted == null)) {
                this.UpdateNewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNewsOperationCompleted);
            }
            this.InvokeAsync("UpdateNews", new object[] {
                        newsId,
                        title,
                        content,
                        isVal,
                        isTop,
                        ntype}, this.UpdateNewsOperationCompleted, userState);
        }
        
        private void OnUpdateNewsOperationCompleted(object arg) {
            if ((this.UpdateNewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNewsCompleted(this, new UpdateNewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/DeleteNews", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteNews(System.Guid newsId) {
            object[] results = this.Invoke("DeleteNews", new object[] {
                        newsId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteNewsAsync(System.Guid newsId) {
            this.DeleteNewsAsync(newsId, null);
        }
        
        /// <remarks/>
        public void DeleteNewsAsync(System.Guid newsId, object userState) {
            if ((this.DeleteNewsOperationCompleted == null)) {
                this.DeleteNewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteNewsOperationCompleted);
            }
            this.InvokeAsync("DeleteNews", new object[] {
                        newsId}, this.DeleteNewsOperationCompleted, userState);
        }
        
        private void OnDeleteNewsOperationCompleted(object arg) {
            if ((this.DeleteNewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteNewsCompleted(this, new DeleteNewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/CreateNews", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateNews(System.Guid newsId, string title, string content, System.DateTime createDate, string loginId, string userName, System.Guid userId, char isVal, char isTop, char ntype) {
            object[] results = this.Invoke("CreateNews", new object[] {
                        newsId,
                        title,
                        content,
                        createDate,
                        loginId,
                        userName,
                        userId,
                        isVal,
                        isTop,
                        ntype});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewsAsync(System.Guid newsId, string title, string content, System.DateTime createDate, string loginId, string userName, System.Guid userId, char isVal, char isTop, char ntype) {
            this.CreateNewsAsync(newsId, title, content, createDate, loginId, userName, userId, isVal, isTop, ntype, null);
        }
        
        /// <remarks/>
        public void CreateNewsAsync(System.Guid newsId, string title, string content, System.DateTime createDate, string loginId, string userName, System.Guid userId, char isVal, char isTop, char ntype, object userState) {
            if ((this.CreateNewsOperationCompleted == null)) {
                this.CreateNewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewsOperationCompleted);
            }
            this.InvokeAsync("CreateNews", new object[] {
                        newsId,
                        title,
                        content,
                        createDate,
                        loginId,
                        userName,
                        userId,
                        isVal,
                        isTop,
                        ntype}, this.CreateNewsOperationCompleted, userState);
        }
        
        private void OnCreateNewsOperationCompleted(object arg) {
            if ((this.CreateNewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewsCompleted(this, new CreateNewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/GetTopLatestImage", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTopLatestImage() {
            object[] results = this.Invoke("GetTopLatestImage", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopLatestImageAsync() {
            this.GetTopLatestImageAsync(null);
        }
        
        /// <remarks/>
        public void GetTopLatestImageAsync(object userState) {
            if ((this.GetTopLatestImageOperationCompleted == null)) {
                this.GetTopLatestImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopLatestImageOperationCompleted);
            }
            this.InvokeAsync("GetTopLatestImage", new object[0], this.GetTopLatestImageOperationCompleted, userState);
        }
        
        private void OnGetTopLatestImageOperationCompleted(object arg) {
            if ((this.GetTopLatestImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopLatestImageCompleted(this, new GetTopLatestImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/GetTopImagesOfCatalog", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTopImagesOfCatalog(System.Guid parentCataId) {
            object[] results = this.Invoke("GetTopImagesOfCatalog", new object[] {
                        parentCataId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopImagesOfCatalogAsync(System.Guid parentCataId) {
            this.GetTopImagesOfCatalogAsync(parentCataId, null);
        }
        
        /// <remarks/>
        public void GetTopImagesOfCatalogAsync(System.Guid parentCataId, object userState) {
            if ((this.GetTopImagesOfCatalogOperationCompleted == null)) {
                this.GetTopImagesOfCatalogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopImagesOfCatalogOperationCompleted);
            }
            this.InvokeAsync("GetTopImagesOfCatalog", new object[] {
                        parentCataId}, this.GetTopImagesOfCatalogOperationCompleted, userState);
        }
        
        private void OnGetTopImagesOfCatalogOperationCompleted(object arg) {
            if ((this.GetTopImagesOfCatalogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopImagesOfCatalogCompleted(this, new GetTopImagesOfCatalogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/GetSN", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSN(string prefix) {
            object[] results = this.Invoke("GetSN", new object[] {
                        prefix});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSNAsync(string prefix) {
            this.GetSNAsync(prefix, null);
        }
        
        /// <remarks/>
        public void GetSNAsync(string prefix, object userState) {
            if ((this.GetSNOperationCompleted == null)) {
                this.GetSNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSNOperationCompleted);
            }
            this.InvokeAsync("GetSN", new object[] {
                        prefix}, this.GetSNOperationCompleted, userState);
        }
        
        private void OnGetSNOperationCompleted(object arg) {
            if ((this.GetSNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSNCompleted(this, new GetSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/GetImageSeq", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetImageSeq(System.DateTime dt) {
            object[] results = this.Invoke("GetImageSeq", new object[] {
                        dt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageSeqAsync(System.DateTime dt) {
            this.GetImageSeqAsync(dt, null);
        }
        
        /// <remarks/>
        public void GetImageSeqAsync(System.DateTime dt, object userState) {
            if ((this.GetImageSeqOperationCompleted == null)) {
                this.GetImageSeqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageSeqOperationCompleted);
            }
            this.InvokeAsync("GetImageSeq", new object[] {
                        dt}, this.GetImageSeqOperationCompleted, userState);
        }
        
        private void OnGetImageSeqOperationCompleted(object arg) {
            if ((this.GetImageSeqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageSeqCompleted(this, new GetImageSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/GetImageSeqByServerDate", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetImageSeqByServerDate() {
            object[] results = this.Invoke("GetImageSeqByServerDate", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageSeqByServerDateAsync() {
            this.GetImageSeqByServerDateAsync(null);
        }
        
        /// <remarks/>
        public void GetImageSeqByServerDateAsync(object userState) {
            if ((this.GetImageSeqByServerDateOperationCompleted == null)) {
                this.GetImageSeqByServerDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageSeqByServerDateOperationCompleted);
            }
            this.InvokeAsync("GetImageSeqByServerDate", new object[0], this.GetImageSeqByServerDateOperationCompleted, userState);
        }
        
        private void OnGetImageSeqByServerDateOperationCompleted(object arg) {
            if ((this.GetImageSeqByServerDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageSeqByServerDateCompleted(this, new GetImageSeqByServerDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/GetVideoSeq", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVideoSeq(System.DateTime dt) {
            object[] results = this.Invoke("GetVideoSeq", new object[] {
                        dt});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVideoSeqAsync(System.DateTime dt) {
            this.GetVideoSeqAsync(dt, null);
        }
        
        /// <remarks/>
        public void GetVideoSeqAsync(System.DateTime dt, object userState) {
            if ((this.GetVideoSeqOperationCompleted == null)) {
                this.GetVideoSeqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVideoSeqOperationCompleted);
            }
            this.InvokeAsync("GetVideoSeq", new object[] {
                        dt}, this.GetVideoSeqOperationCompleted, userState);
        }
        
        private void OnGetVideoSeqOperationCompleted(object arg) {
            if ((this.GetVideoSeqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVideoSeqCompleted(this, new GetVideoSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/GetSysSeq", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSysSeq(string preFix, int flowNumLength, System.DateTime date) {
            object[] results = this.Invoke("GetSysSeq", new object[] {
                        preFix,
                        flowNumLength,
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSysSeqAsync(string preFix, int flowNumLength, System.DateTime date) {
            this.GetSysSeqAsync(preFix, flowNumLength, date, null);
        }
        
        /// <remarks/>
        public void GetSysSeqAsync(string preFix, int flowNumLength, System.DateTime date, object userState) {
            if ((this.GetSysSeqOperationCompleted == null)) {
                this.GetSysSeqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSysSeqOperationCompleted);
            }
            this.InvokeAsync("GetSysSeq", new object[] {
                        preFix,
                        flowNumLength,
                        date}, this.GetSysSeqOperationCompleted, userState);
        }
        
        private void OnGetSysSeqOperationCompleted(object arg) {
            if ((this.GetSysSeqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSysSeqCompleted(this, new GetSysSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/AddADUsersToDB", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddADUsersToDB(string userListStr, System.Guid groupid) {
            object[] results = this.Invoke("AddADUsersToDB", new object[] {
                        userListStr,
                        groupid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddADUsersToDBAsync(string userListStr, System.Guid groupid) {
            this.AddADUsersToDBAsync(userListStr, groupid, null);
        }
        
        /// <remarks/>
        public void AddADUsersToDBAsync(string userListStr, System.Guid groupid, object userState) {
            if ((this.AddADUsersToDBOperationCompleted == null)) {
                this.AddADUsersToDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddADUsersToDBOperationCompleted);
            }
            this.InvokeAsync("AddADUsersToDB", new object[] {
                        userListStr,
                        groupid}, this.AddADUsersToDBOperationCompleted, userState);
        }
        
        private void OnAddADUsersToDBOperationCompleted(object arg) {
            if ((this.AddADUsersToDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddADUsersToDBCompleted(this, new AddADUsersToDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNewsCompletedEventHandler(object sender, GetNewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNewsListCompletedEventHandler(object sender, GetNewsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateNewsCompletedEventHandler(object sender, UpdateNewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteNewsCompletedEventHandler(object sender, DeleteNewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateNewsCompletedEventHandler(object sender, CreateNewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTopLatestImageCompletedEventHandler(object sender, GetTopLatestImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopLatestImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopLatestImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTopImagesOfCatalogCompletedEventHandler(object sender, GetTopImagesOfCatalogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopImagesOfCatalogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopImagesOfCatalogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSNCompletedEventHandler(object sender, GetSNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetImageSeqCompletedEventHandler(object sender, GetImageSeqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageSeqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageSeqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetImageSeqByServerDateCompletedEventHandler(object sender, GetImageSeqByServerDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageSeqByServerDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageSeqByServerDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetVideoSeqCompletedEventHandler(object sender, GetVideoSeqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVideoSeqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVideoSeqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSysSeqCompletedEventHandler(object sender, GetSysSeqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSysSeqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSysSeqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddADUsersToDBCompletedEventHandler(object sender, AddADUsersToDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddADUsersToDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddADUsersToDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591