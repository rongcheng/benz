//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.239
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.239 版自动生成。
// 
#pragma warning disable 1591

namespace QJVRMS.Business.CalendarWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CalendarServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CalendarService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCalendarsMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCalendarsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowCalendarsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCalendarOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditCalendarOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCalendarOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCalendarsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CalendarService() {
            this.Url = global::QJVRMS.Business.Properties.Settings.Default.QJVRMS_Business_CalendarWS_CalendarService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetCalendarsMonthCompletedEventHandler GetCalendarsMonthCompleted;
        
        /// <remarks/>
        public event GetCalendarsCompletedEventHandler GetCalendarsCompleted;
        
        /// <remarks/>
        public event ShowCalendarsCompletedEventHandler ShowCalendarsCompleted;
        
        /// <remarks/>
        public event GetCalendarCompletedEventHandler GetCalendarCompleted;
        
        /// <remarks/>
        public event EditCalendarCompletedEventHandler EditCalendarCompleted;
        
        /// <remarks/>
        public event DeleteCalendarCompletedEventHandler DeleteCalendarCompleted;
        
        /// <remarks/>
        public event SearchCalendarsCompletedEventHandler SearchCalendarsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCalendarsMonth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCalendarsMonth(string startTime, string endTime, string creator) {
            object[] results = this.Invoke("GetCalendarsMonth", new object[] {
                        startTime,
                        endTime,
                        creator});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCalendarsMonthAsync(string startTime, string endTime, string creator) {
            this.GetCalendarsMonthAsync(startTime, endTime, creator, null);
        }
        
        /// <remarks/>
        public void GetCalendarsMonthAsync(string startTime, string endTime, string creator, object userState) {
            if ((this.GetCalendarsMonthOperationCompleted == null)) {
                this.GetCalendarsMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCalendarsMonthOperationCompleted);
            }
            this.InvokeAsync("GetCalendarsMonth", new object[] {
                        startTime,
                        endTime,
                        creator}, this.GetCalendarsMonthOperationCompleted, userState);
        }
        
        private void OnGetCalendarsMonthOperationCompleted(object arg) {
            if ((this.GetCalendarsMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCalendarsMonthCompleted(this, new GetCalendarsMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCalendars", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCalendars(string nowTime, string creator) {
            object[] results = this.Invoke("GetCalendars", new object[] {
                        nowTime,
                        creator});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCalendarsAsync(string nowTime, string creator) {
            this.GetCalendarsAsync(nowTime, creator, null);
        }
        
        /// <remarks/>
        public void GetCalendarsAsync(string nowTime, string creator, object userState) {
            if ((this.GetCalendarsOperationCompleted == null)) {
                this.GetCalendarsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCalendarsOperationCompleted);
            }
            this.InvokeAsync("GetCalendars", new object[] {
                        nowTime,
                        creator}, this.GetCalendarsOperationCompleted, userState);
        }
        
        private void OnGetCalendarsOperationCompleted(object arg) {
            if ((this.GetCalendarsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCalendarsCompleted(this, new GetCalendarsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShowCalendars", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ShowCalendars(string nowTime, string creator) {
            object[] results = this.Invoke("ShowCalendars", new object[] {
                        nowTime,
                        creator});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ShowCalendarsAsync(string nowTime, string creator) {
            this.ShowCalendarsAsync(nowTime, creator, null);
        }
        
        /// <remarks/>
        public void ShowCalendarsAsync(string nowTime, string creator, object userState) {
            if ((this.ShowCalendarsOperationCompleted == null)) {
                this.ShowCalendarsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowCalendarsOperationCompleted);
            }
            this.InvokeAsync("ShowCalendars", new object[] {
                        nowTime,
                        creator}, this.ShowCalendarsOperationCompleted, userState);
        }
        
        private void OnShowCalendarsOperationCompleted(object arg) {
            if ((this.ShowCalendarsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowCalendarsCompleted(this, new ShowCalendarsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCalendar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCalendar(System.Guid calendarId) {
            object[] results = this.Invoke("GetCalendar", new object[] {
                        calendarId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCalendarAsync(System.Guid calendarId) {
            this.GetCalendarAsync(calendarId, null);
        }
        
        /// <remarks/>
        public void GetCalendarAsync(System.Guid calendarId, object userState) {
            if ((this.GetCalendarOperationCompleted == null)) {
                this.GetCalendarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCalendarOperationCompleted);
            }
            this.InvokeAsync("GetCalendar", new object[] {
                        calendarId}, this.GetCalendarOperationCompleted, userState);
        }
        
        private void OnGetCalendarOperationCompleted(object arg) {
            if ((this.GetCalendarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCalendarCompleted(this, new GetCalendarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditCalendar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EditCalendar(System.Guid calendarId, string theme, string site, string label, string sDate, string sTime, string eDate, string eTime, string content, string creator) {
            object[] results = this.Invoke("EditCalendar", new object[] {
                        calendarId,
                        theme,
                        site,
                        label,
                        sDate,
                        sTime,
                        eDate,
                        eTime,
                        content,
                        creator});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EditCalendarAsync(System.Guid calendarId, string theme, string site, string label, string sDate, string sTime, string eDate, string eTime, string content, string creator) {
            this.EditCalendarAsync(calendarId, theme, site, label, sDate, sTime, eDate, eTime, content, creator, null);
        }
        
        /// <remarks/>
        public void EditCalendarAsync(System.Guid calendarId, string theme, string site, string label, string sDate, string sTime, string eDate, string eTime, string content, string creator, object userState) {
            if ((this.EditCalendarOperationCompleted == null)) {
                this.EditCalendarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditCalendarOperationCompleted);
            }
            this.InvokeAsync("EditCalendar", new object[] {
                        calendarId,
                        theme,
                        site,
                        label,
                        sDate,
                        sTime,
                        eDate,
                        eTime,
                        content,
                        creator}, this.EditCalendarOperationCompleted, userState);
        }
        
        private void OnEditCalendarOperationCompleted(object arg) {
            if ((this.EditCalendarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCalendarCompleted(this, new EditCalendarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCalendar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteCalendar(System.Guid calendarId) {
            object[] results = this.Invoke("DeleteCalendar", new object[] {
                        calendarId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCalendarAsync(System.Guid calendarId) {
            this.DeleteCalendarAsync(calendarId, null);
        }
        
        /// <remarks/>
        public void DeleteCalendarAsync(System.Guid calendarId, object userState) {
            if ((this.DeleteCalendarOperationCompleted == null)) {
                this.DeleteCalendarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCalendarOperationCompleted);
            }
            this.InvokeAsync("DeleteCalendar", new object[] {
                        calendarId}, this.DeleteCalendarOperationCompleted, userState);
        }
        
        private void OnDeleteCalendarOperationCompleted(object arg) {
            if ((this.DeleteCalendarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCalendarCompleted(this, new DeleteCalendarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchCalendars", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchCalendars(string monthTime, string sTime, string eTime, string state, string creator, int pageSize, int pageIndex, int type) {
            object[] results = this.Invoke("SearchCalendars", new object[] {
                        monthTime,
                        sTime,
                        eTime,
                        state,
                        creator,
                        pageSize,
                        pageIndex,
                        type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchCalendarsAsync(string monthTime, string sTime, string eTime, string state, string creator, int pageSize, int pageIndex, int type) {
            this.SearchCalendarsAsync(monthTime, sTime, eTime, state, creator, pageSize, pageIndex, type, null);
        }
        
        /// <remarks/>
        public void SearchCalendarsAsync(string monthTime, string sTime, string eTime, string state, string creator, int pageSize, int pageIndex, int type, object userState) {
            if ((this.SearchCalendarsOperationCompleted == null)) {
                this.SearchCalendarsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCalendarsOperationCompleted);
            }
            this.InvokeAsync("SearchCalendars", new object[] {
                        monthTime,
                        sTime,
                        eTime,
                        state,
                        creator,
                        pageSize,
                        pageIndex,
                        type}, this.SearchCalendarsOperationCompleted, userState);
        }
        
        private void OnSearchCalendarsOperationCompleted(object arg) {
            if ((this.SearchCalendarsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCalendarsCompleted(this, new SearchCalendarsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCalendarsMonthCompletedEventHandler(object sender, GetCalendarsMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCalendarsMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCalendarsMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCalendarsCompletedEventHandler(object sender, GetCalendarsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCalendarsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCalendarsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ShowCalendarsCompletedEventHandler(object sender, ShowCalendarsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowCalendarsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowCalendarsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCalendarCompletedEventHandler(object sender, GetCalendarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCalendarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCalendarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EditCalendarCompletedEventHandler(object sender, EditCalendarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditCalendarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditCalendarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteCalendarCompletedEventHandler(object sender, DeleteCalendarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCalendarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCalendarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchCalendarsCompletedEventHandler(object sender, SearchCalendarsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCalendarsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCalendarsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591