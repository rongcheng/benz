//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.239
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.239 版自动生成。
// 
#pragma warning disable 1591

namespace QJVRMS.Business.MemWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MemberShipServiceSoap", Namespace="http://qjDataAccess.org/")]
    public partial class MemberShipService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddADUsersToDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthUserByADOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthClientUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthUserByFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyUserInfo1OperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByLoginNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserExistOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MemberShipService() {
            this.Url = global::QJVRMS.Business.Properties.Settings.Default.QJVRMS_Business_MemWS_MemberShipService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddADUsersToDBCompletedEventHandler AddADUsersToDBCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event CheckUsersCompletedEventHandler CheckUsersCompleted;
        
        /// <remarks/>
        public event AuthUserByADCompletedEventHandler AuthUserByADCompleted;
        
        /// <remarks/>
        public event AuthClientUserCompletedEventHandler AuthClientUserCompleted;
        
        /// <remarks/>
        public event AuthUserByFormCompletedEventHandler AuthUserByFormCompleted;
        
        /// <remarks/>
        public event GetUserRightCompletedEventHandler GetUserRightCompleted;
        
        /// <remarks/>
        public event ModifyUserInfoCompletedEventHandler ModifyUserInfoCompleted;
        
        /// <remarks/>
        public event ModifyUserInfo1CompletedEventHandler ModifyUserInfo1Completed;
        
        /// <remarks/>
        public event ResetPasswordCompletedEventHandler ResetPasswordCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event CreateUserCompletedEventHandler CreateUserCompleted;
        
        /// <remarks/>
        public event GetUserByLoginNameCompletedEventHandler GetUserByLoginNameCompleted;
        
        /// <remarks/>
        public event GetUserByIdCompletedEventHandler GetUserByIdCompleted;
        
        /// <remarks/>
        public event IsUserExistCompletedEventHandler IsUserExistCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/AddADUsersToDB", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddADUsersToDB(string userListStr, System.Guid groupid) {
            object[] results = this.Invoke("AddADUsersToDB", new object[] {
                        userListStr,
                        groupid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddADUsersToDBAsync(string userListStr, System.Guid groupid) {
            this.AddADUsersToDBAsync(userListStr, groupid, null);
        }
        
        /// <remarks/>
        public void AddADUsersToDBAsync(string userListStr, System.Guid groupid, object userState) {
            if ((this.AddADUsersToDBOperationCompleted == null)) {
                this.AddADUsersToDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddADUsersToDBOperationCompleted);
            }
            this.InvokeAsync("AddADUsersToDB", new object[] {
                        userListStr,
                        groupid}, this.AddADUsersToDBOperationCompleted, userState);
        }
        
        private void OnAddADUsersToDBOperationCompleted(object arg) {
            if ((this.AddADUsersToDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddADUsersToDBCompleted(this, new AddADUsersToDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/DeleteUser", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteUser(System.Guid userId) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        userId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(System.Guid userId) {
            this.DeleteUserAsync(userId, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(System.Guid userId, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        userId}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/CheckUsers", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckUsers(string domainName, string OU, string adminId, string adminPwd, string listUserStr) {
            object[] results = this.Invoke("CheckUsers", new object[] {
                        domainName,
                        OU,
                        adminId,
                        adminPwd,
                        listUserStr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUsersAsync(string domainName, string OU, string adminId, string adminPwd, string listUserStr) {
            this.CheckUsersAsync(domainName, OU, adminId, adminPwd, listUserStr, null);
        }
        
        /// <remarks/>
        public void CheckUsersAsync(string domainName, string OU, string adminId, string adminPwd, string listUserStr, object userState) {
            if ((this.CheckUsersOperationCompleted == null)) {
                this.CheckUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUsersOperationCompleted);
            }
            this.InvokeAsync("CheckUsers", new object[] {
                        domainName,
                        OU,
                        adminId,
                        adminPwd,
                        listUserStr}, this.CheckUsersOperationCompleted, userState);
        }
        
        private void OnCheckUsersOperationCompleted(object arg) {
            if ((this.CheckUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUsersCompleted(this, new CheckUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/AuthUserByAD", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuthUserByAD(string domain, string loginfullName, string loginId, string password) {
            object[] results = this.Invoke("AuthUserByAD", new object[] {
                        domain,
                        loginfullName,
                        loginId,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthUserByADAsync(string domain, string loginfullName, string loginId, string password) {
            this.AuthUserByADAsync(domain, loginfullName, loginId, password, null);
        }
        
        /// <remarks/>
        public void AuthUserByADAsync(string domain, string loginfullName, string loginId, string password, object userState) {
            if ((this.AuthUserByADOperationCompleted == null)) {
                this.AuthUserByADOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthUserByADOperationCompleted);
            }
            this.InvokeAsync("AuthUserByAD", new object[] {
                        domain,
                        loginfullName,
                        loginId,
                        password}, this.AuthUserByADOperationCompleted, userState);
        }
        
        private void OnAuthUserByADOperationCompleted(object arg) {
            if ((this.AuthUserByADCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthUserByADCompleted(this, new AuthUserByADCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/AuthClientUser", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuthClientUser(string loginName, string password) {
            object[] results = this.Invoke("AuthClientUser", new object[] {
                        loginName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthClientUserAsync(string loginName, string password) {
            this.AuthClientUserAsync(loginName, password, null);
        }
        
        /// <remarks/>
        public void AuthClientUserAsync(string loginName, string password, object userState) {
            if ((this.AuthClientUserOperationCompleted == null)) {
                this.AuthClientUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthClientUserOperationCompleted);
            }
            this.InvokeAsync("AuthClientUser", new object[] {
                        loginName,
                        password}, this.AuthClientUserOperationCompleted, userState);
        }
        
        private void OnAuthClientUserOperationCompleted(object arg) {
            if ((this.AuthClientUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthClientUserCompleted(this, new AuthClientUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/AuthUserByForm", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuthUserByForm(string loginName, string password, string IPAddress) {
            object[] results = this.Invoke("AuthUserByForm", new object[] {
                        loginName,
                        password,
                        IPAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthUserByFormAsync(string loginName, string password, string IPAddress) {
            this.AuthUserByFormAsync(loginName, password, IPAddress, null);
        }
        
        /// <remarks/>
        public void AuthUserByFormAsync(string loginName, string password, string IPAddress, object userState) {
            if ((this.AuthUserByFormOperationCompleted == null)) {
                this.AuthUserByFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthUserByFormOperationCompleted);
            }
            this.InvokeAsync("AuthUserByForm", new object[] {
                        loginName,
                        password,
                        IPAddress}, this.AuthUserByFormOperationCompleted, userState);
        }
        
        private void OnAuthUserByFormOperationCompleted(object arg) {
            if ((this.AuthUserByFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthUserByFormCompleted(this, new AuthUserByFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/GetUserRight", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserRight(string userId, string ObjectId) {
            object[] results = this.Invoke("GetUserRight", new object[] {
                        userId,
                        ObjectId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRightAsync(string userId, string ObjectId) {
            this.GetUserRightAsync(userId, ObjectId, null);
        }
        
        /// <remarks/>
        public void GetUserRightAsync(string userId, string ObjectId, object userState) {
            if ((this.GetUserRightOperationCompleted == null)) {
                this.GetUserRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRightOperationCompleted);
            }
            this.InvokeAsync("GetUserRight", new object[] {
                        userId,
                        ObjectId}, this.GetUserRightOperationCompleted, userState);
        }
        
        private void OnGetUserRightOperationCompleted(object arg) {
            if ((this.GetUserRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRightCompleted(this, new GetUserRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/ModifyUserInfo", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyUserInfo(System.Guid userId, System.Guid groupId, string userName, string email, string tel, bool islocked, string isdownload, bool isIPValidate) {
            object[] results = this.Invoke("ModifyUserInfo", new object[] {
                        userId,
                        groupId,
                        userName,
                        email,
                        tel,
                        islocked,
                        isdownload,
                        isIPValidate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyUserInfoAsync(System.Guid userId, System.Guid groupId, string userName, string email, string tel, bool islocked, string isdownload, bool isIPValidate) {
            this.ModifyUserInfoAsync(userId, groupId, userName, email, tel, islocked, isdownload, isIPValidate, null);
        }
        
        /// <remarks/>
        public void ModifyUserInfoAsync(System.Guid userId, System.Guid groupId, string userName, string email, string tel, bool islocked, string isdownload, bool isIPValidate, object userState) {
            if ((this.ModifyUserInfoOperationCompleted == null)) {
                this.ModifyUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyUserInfoOperationCompleted);
            }
            this.InvokeAsync("ModifyUserInfo", new object[] {
                        userId,
                        groupId,
                        userName,
                        email,
                        tel,
                        islocked,
                        isdownload,
                        isIPValidate}, this.ModifyUserInfoOperationCompleted, userState);
        }
        
        private void OnModifyUserInfoOperationCompleted(object arg) {
            if ((this.ModifyUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyUserInfoCompleted(this, new ModifyUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/ModifyUserInfo1", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyUserInfo1(System.Guid userId, System.Guid groupId, string userName, string email, string tel, bool islocked, bool isdownload, bool isIPValidate) {
            object[] results = this.Invoke("ModifyUserInfo1", new object[] {
                        userId,
                        groupId,
                        userName,
                        email,
                        tel,
                        islocked,
                        isdownload,
                        isIPValidate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyUserInfo1Async(System.Guid userId, System.Guid groupId, string userName, string email, string tel, bool islocked, bool isdownload, bool isIPValidate) {
            this.ModifyUserInfo1Async(userId, groupId, userName, email, tel, islocked, isdownload, isIPValidate, null);
        }
        
        /// <remarks/>
        public void ModifyUserInfo1Async(System.Guid userId, System.Guid groupId, string userName, string email, string tel, bool islocked, bool isdownload, bool isIPValidate, object userState) {
            if ((this.ModifyUserInfo1OperationCompleted == null)) {
                this.ModifyUserInfo1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyUserInfo1OperationCompleted);
            }
            this.InvokeAsync("ModifyUserInfo1", new object[] {
                        userId,
                        groupId,
                        userName,
                        email,
                        tel,
                        islocked,
                        isdownload,
                        isIPValidate}, this.ModifyUserInfo1OperationCompleted, userState);
        }
        
        private void OnModifyUserInfo1OperationCompleted(object arg) {
            if ((this.ModifyUserInfo1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyUserInfo1Completed(this, new ModifyUserInfo1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/ResetPassword", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ResetPassword(System.Guid userId, string newPassword) {
            object[] results = this.Invoke("ResetPassword", new object[] {
                        userId,
                        newPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(System.Guid userId, string newPassword) {
            this.ResetPasswordAsync(userId, newPassword, null);
        }
        
        /// <remarks/>
        public void ResetPasswordAsync(System.Guid userId, string newPassword, object userState) {
            if ((this.ResetPasswordOperationCompleted == null)) {
                this.ResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetPassword", new object[] {
                        userId,
                        newPassword}, this.ResetPasswordOperationCompleted, userState);
        }
        
        private void OnResetPasswordOperationCompleted(object arg) {
            if ((this.ResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/ChangePassword", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangePassword(System.Guid userId, string oldPassword, string newPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        userId,
                        oldPassword,
                        newPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(System.Guid userId, string oldPassword, string newPassword) {
            this.ChangePasswordAsync(userId, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(System.Guid userId, string oldPassword, string newPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        userId,
                        oldPassword,
                        newPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/CreateUser", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid CreateUser(string password, string loginName, string userName, System.Guid groupId, string email, string tel, bool islocked, string isdownload, bool isIPValidate) {
            object[] results = this.Invoke("CreateUser", new object[] {
                        password,
                        loginName,
                        userName,
                        groupId,
                        email,
                        tel,
                        islocked,
                        isdownload,
                        isIPValidate});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserAsync(string password, string loginName, string userName, System.Guid groupId, string email, string tel, bool islocked, string isdownload, bool isIPValidate) {
            this.CreateUserAsync(password, loginName, userName, groupId, email, tel, islocked, isdownload, isIPValidate, null);
        }
        
        /// <remarks/>
        public void CreateUserAsync(string password, string loginName, string userName, System.Guid groupId, string email, string tel, bool islocked, string isdownload, bool isIPValidate, object userState) {
            if ((this.CreateUserOperationCompleted == null)) {
                this.CreateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserOperationCompleted);
            }
            this.InvokeAsync("CreateUser", new object[] {
                        password,
                        loginName,
                        userName,
                        groupId,
                        email,
                        tel,
                        islocked,
                        isdownload,
                        isIPValidate}, this.CreateUserOperationCompleted, userState);
        }
        
        private void OnCreateUserOperationCompleted(object arg) {
            if ((this.CreateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/GetUserByLoginName", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserByLoginName(string loginName) {
            object[] results = this.Invoke("GetUserByLoginName", new object[] {
                        loginName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByLoginNameAsync(string loginName) {
            this.GetUserByLoginNameAsync(loginName, null);
        }
        
        /// <remarks/>
        public void GetUserByLoginNameAsync(string loginName, object userState) {
            if ((this.GetUserByLoginNameOperationCompleted == null)) {
                this.GetUserByLoginNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByLoginNameOperationCompleted);
            }
            this.InvokeAsync("GetUserByLoginName", new object[] {
                        loginName}, this.GetUserByLoginNameOperationCompleted, userState);
        }
        
        private void OnGetUserByLoginNameOperationCompleted(object arg) {
            if ((this.GetUserByLoginNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByLoginNameCompleted(this, new GetUserByLoginNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/GetUserById", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserById(System.Guid userId) {
            object[] results = this.Invoke("GetUserById", new object[] {
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByIdAsync(System.Guid userId) {
            this.GetUserByIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetUserByIdAsync(System.Guid userId, object userState) {
            if ((this.GetUserByIdOperationCompleted == null)) {
                this.GetUserByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByIdOperationCompleted);
            }
            this.InvokeAsync("GetUserById", new object[] {
                        userId}, this.GetUserByIdOperationCompleted, userState);
        }
        
        private void OnGetUserByIdOperationCompleted(object arg) {
            if ((this.GetUserByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByIdCompleted(this, new GetUserByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/IsUserExist", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserExist(string loginName) {
            object[] results = this.Invoke("IsUserExist", new object[] {
                        loginName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserExistAsync(string loginName) {
            this.IsUserExistAsync(loginName, null);
        }
        
        /// <remarks/>
        public void IsUserExistAsync(string loginName, object userState) {
            if ((this.IsUserExistOperationCompleted == null)) {
                this.IsUserExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserExistOperationCompleted);
            }
            this.InvokeAsync("IsUserExist", new object[] {
                        loginName}, this.IsUserExistOperationCompleted, userState);
        }
        
        private void OnIsUserExistOperationCompleted(object arg) {
            if ((this.IsUserExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserExistCompleted(this, new IsUserExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddADUsersToDBCompletedEventHandler(object sender, AddADUsersToDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddADUsersToDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddADUsersToDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckUsersCompletedEventHandler(object sender, CheckUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuthUserByADCompletedEventHandler(object sender, AuthUserByADCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthUserByADCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthUserByADCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuthClientUserCompletedEventHandler(object sender, AuthClientUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthClientUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthClientUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuthUserByFormCompletedEventHandler(object sender, AuthUserByFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthUserByFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthUserByFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserRightCompletedEventHandler(object sender, GetUserRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ModifyUserInfoCompletedEventHandler(object sender, ModifyUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ModifyUserInfo1CompletedEventHandler(object sender, ModifyUserInfo1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyUserInfo1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyUserInfo1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ResetPasswordCompletedEventHandler(object sender, ResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateUserCompletedEventHandler(object sender, CreateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserByLoginNameCompletedEventHandler(object sender, GetUserByLoginNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByLoginNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByLoginNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserByIdCompletedEventHandler(object sender, GetUserByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsUserExistCompletedEventHandler(object sender, IsUserExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591