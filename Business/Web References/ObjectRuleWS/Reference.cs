//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.239
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.239 版自动生成。
// 
#pragma warning disable 1591

namespace QJVRMS.Business.ObjectRuleWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ObjectRuleServiceSoap", Namespace="http://qjDataAccess.org/")]
    public partial class ObjectRuleService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SetRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckRulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValidateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ObjectRuleService() {
            this.Url = global::QJVRMS.Business.Properties.Settings.Default.QJVRMS_Business_ObjectRuleWS_ObjectRuleService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SetRulesCompletedEventHandler SetRulesCompleted;
        
        /// <remarks/>
        public event CheckRulesCompletedEventHandler CheckRulesCompleted;
        
        /// <remarks/>
        public event CheckValidateCompletedEventHandler CheckValidateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/SetRules", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetRules(string rulesStr, string secObjStr, string opersStr) {
            object[] results = this.Invoke("SetRules", new object[] {
                        rulesStr,
                        secObjStr,
                        opersStr});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetRulesAsync(string rulesStr, string secObjStr, string opersStr) {
            this.SetRulesAsync(rulesStr, secObjStr, opersStr, null);
        }
        
        /// <remarks/>
        public void SetRulesAsync(string rulesStr, string secObjStr, string opersStr, object userState) {
            if ((this.SetRulesOperationCompleted == null)) {
                this.SetRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRulesOperationCompleted);
            }
            this.InvokeAsync("SetRules", new object[] {
                        rulesStr,
                        secObjStr,
                        opersStr}, this.SetRulesOperationCompleted, userState);
        }
        
        private void OnSetRulesOperationCompleted(object arg) {
            if ((this.SetRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRulesCompleted(this, new SetRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/CheckRules", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckRules(string rulesStr) {
            object[] results = this.Invoke("CheckRules", new object[] {
                        rulesStr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckRulesAsync(string rulesStr) {
            this.CheckRulesAsync(rulesStr, null);
        }
        
        /// <remarks/>
        public void CheckRulesAsync(string rulesStr, object userState) {
            if ((this.CheckRulesOperationCompleted == null)) {
                this.CheckRulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRulesOperationCompleted);
            }
            this.InvokeAsync("CheckRules", new object[] {
                        rulesStr}, this.CheckRulesOperationCompleted, userState);
        }
        
        private void OnCheckRulesOperationCompleted(object arg) {
            if ((this.CheckRulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRulesCompleted(this, new CheckRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/CheckValidate", RequestNamespace="http://qjDataAccess.org/", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckValidate(System.Guid objectId, System.Guid operatorId, int method, int otype) {
            object[] results = this.Invoke("CheckValidate", new object[] {
                        objectId,
                        operatorId,
                        method,
                        otype});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckValidateAsync(System.Guid objectId, System.Guid operatorId, int method, int otype) {
            this.CheckValidateAsync(objectId, operatorId, method, otype, null);
        }
        
        /// <remarks/>
        public void CheckValidateAsync(System.Guid objectId, System.Guid operatorId, int method, int otype, object userState) {
            if ((this.CheckValidateOperationCompleted == null)) {
                this.CheckValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValidateOperationCompleted);
            }
            this.InvokeAsync("CheckValidate", new object[] {
                        objectId,
                        operatorId,
                        method,
                        otype}, this.CheckValidateOperationCompleted, userState);
        }
        
        private void OnCheckValidateOperationCompleted(object arg) {
            if ((this.CheckValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValidateCompleted(this, new CheckValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetRulesCompletedEventHandler(object sender, SetRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckRulesCompletedEventHandler(object sender, CheckRulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckRulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckRulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckValidateCompletedEventHandler(object sender, CheckValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591