//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.239
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.239 版自动生成。
// 
#pragma warning disable 1591

namespace QJVRMS.Business.DmDa {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DMDataAccessSoap", Namespace="http://qjDataAccess.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MarshalByRefObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SqlParameter[]))]
    public partial class DMDataAccess : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ExecuteNonQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteNonQuery1OperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteNonQuery2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteDatasetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteDataset1OperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteDataset2OperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteScalarOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteScalar1OperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteScalar2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DMDataAccess() {
            this.Url = global::QJVRMS.Business.Properties.Settings.Default.QJVRMS_Business_DmDa_DMDataAccess;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ExecuteNonQueryCompletedEventHandler ExecuteNonQueryCompleted;
        
        /// <remarks/>
        public event ExecuteNonQuery1CompletedEventHandler ExecuteNonQuery1Completed;
        
        /// <remarks/>
        public event ExecuteNonQuery2CompletedEventHandler ExecuteNonQuery2Completed;
        
        /// <remarks/>
        public event ExecuteDatasetCompletedEventHandler ExecuteDatasetCompleted;
        
        /// <remarks/>
        public event ExecuteDataset1CompletedEventHandler ExecuteDataset1Completed;
        
        /// <remarks/>
        public event ExecuteDataset2CompletedEventHandler ExecuteDataset2Completed;
        
        /// <remarks/>
        public event ExecuteScalarCompletedEventHandler ExecuteScalarCompleted;
        
        /// <remarks/>
        public event ExecuteScalar1CompletedEventHandler ExecuteScalar1Completed;
        
        /// <remarks/>
        public event ExecuteScalar2CompletedEventHandler ExecuteScalar2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/ENQ", RequestElementName="ENQ", RequestNamespace="http://qjDataAccess.org/", ResponseElementName="ENQResponse", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ENQResult")]
        public int ExecuteNonQuery(CommandType commandType, string commandText) {
            object[] results = this.Invoke("ExecuteNonQuery", new object[] {
                        commandType,
                        commandText});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(CommandType commandType, string commandText) {
            this.ExecuteNonQueryAsync(commandType, commandText, null);
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(CommandType commandType, string commandText, object userState) {
            if ((this.ExecuteNonQueryOperationCompleted == null)) {
                this.ExecuteNonQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteNonQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteNonQuery", new object[] {
                        commandType,
                        commandText}, this.ExecuteNonQueryOperationCompleted, userState);
        }
        
        private void OnExecuteNonQueryOperationCompleted(object arg) {
            if ((this.ExecuteNonQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteNonQueryCompleted(this, new ExecuteNonQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="ExecuteNonQuery1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/ENQWITHParam", RequestElementName="ENQWITHParam", RequestNamespace="http://qjDataAccess.org/", ResponseElementName="ENQWITHParamResponse", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ENQWITHParamResult")]
        public int ExecuteNonQuery(CommandType commandType, string commandText, SqlParameter[] commandParameters) {
            object[] results = this.Invoke("ExecuteNonQuery1", new object[] {
                        commandType,
                        commandText,
                        commandParameters});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteNonQuery1Async(CommandType commandType, string commandText, SqlParameter[] commandParameters) {
            this.ExecuteNonQuery1Async(commandType, commandText, commandParameters, null);
        }
        
        /// <remarks/>
        public void ExecuteNonQuery1Async(CommandType commandType, string commandText, SqlParameter[] commandParameters, object userState) {
            if ((this.ExecuteNonQuery1OperationCompleted == null)) {
                this.ExecuteNonQuery1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteNonQuery1OperationCompleted);
            }
            this.InvokeAsync("ExecuteNonQuery1", new object[] {
                        commandType,
                        commandText,
                        commandParameters}, this.ExecuteNonQuery1OperationCompleted, userState);
        }
        
        private void OnExecuteNonQuery1OperationCompleted(object arg) {
            if ((this.ExecuteNonQuery1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteNonQuery1Completed(this, new ExecuteNonQuery1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="ExecuteNonQuery2")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/ENQWITHParamValue", RequestElementName="ENQWITHParamValue", RequestNamespace="http://qjDataAccess.org/", ResponseElementName="ENQWITHParamValueResponse", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ENQWITHParamValueResult")]
        public int ExecuteNonQuery(string spName, object[] parameterValues) {
            object[] results = this.Invoke("ExecuteNonQuery2", new object[] {
                        spName,
                        parameterValues});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteNonQuery2Async(string spName, object[] parameterValues) {
            this.ExecuteNonQuery2Async(spName, parameterValues, null);
        }
        
        /// <remarks/>
        public void ExecuteNonQuery2Async(string spName, object[] parameterValues, object userState) {
            if ((this.ExecuteNonQuery2OperationCompleted == null)) {
                this.ExecuteNonQuery2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteNonQuery2OperationCompleted);
            }
            this.InvokeAsync("ExecuteNonQuery2", new object[] {
                        spName,
                        parameterValues}, this.ExecuteNonQuery2OperationCompleted, userState);
        }
        
        private void OnExecuteNonQuery2OperationCompleted(object arg) {
            if ((this.ExecuteNonQuery2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteNonQuery2Completed(this, new ExecuteNonQuery2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/ED", RequestElementName="ED", RequestNamespace="http://qjDataAccess.org/", ResponseElementName="EDResponse", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("EDResult")]
        public System.Data.DataSet ExecuteDataset(CommandType commandType, string commandText) {
            object[] results = this.Invoke("ExecuteDataset", new object[] {
                        commandType,
                        commandText});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteDatasetAsync(CommandType commandType, string commandText) {
            this.ExecuteDatasetAsync(commandType, commandText, null);
        }
        
        /// <remarks/>
        public void ExecuteDatasetAsync(CommandType commandType, string commandText, object userState) {
            if ((this.ExecuteDatasetOperationCompleted == null)) {
                this.ExecuteDatasetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteDatasetOperationCompleted);
            }
            this.InvokeAsync("ExecuteDataset", new object[] {
                        commandType,
                        commandText}, this.ExecuteDatasetOperationCompleted, userState);
        }
        
        private void OnExecuteDatasetOperationCompleted(object arg) {
            if ((this.ExecuteDatasetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteDatasetCompleted(this, new ExecuteDatasetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="ExecuteDataset1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/EDWITHParam", RequestElementName="EDWITHParam", RequestNamespace="http://qjDataAccess.org/", ResponseElementName="EDWITHParamResponse", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("EDWITHParamResult")]
        public System.Data.DataSet ExecuteDataset(CommandType commandType, string commandText, SqlParameter[] commandParameters) {
            object[] results = this.Invoke("ExecuteDataset1", new object[] {
                        commandType,
                        commandText,
                        commandParameters});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteDataset1Async(CommandType commandType, string commandText, SqlParameter[] commandParameters) {
            this.ExecuteDataset1Async(commandType, commandText, commandParameters, null);
        }
        
        /// <remarks/>
        public void ExecuteDataset1Async(CommandType commandType, string commandText, SqlParameter[] commandParameters, object userState) {
            if ((this.ExecuteDataset1OperationCompleted == null)) {
                this.ExecuteDataset1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteDataset1OperationCompleted);
            }
            this.InvokeAsync("ExecuteDataset1", new object[] {
                        commandType,
                        commandText,
                        commandParameters}, this.ExecuteDataset1OperationCompleted, userState);
        }
        
        private void OnExecuteDataset1OperationCompleted(object arg) {
            if ((this.ExecuteDataset1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteDataset1Completed(this, new ExecuteDataset1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="ExecuteDataset2")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/EDWITHParamValue", RequestElementName="EDWITHParamValue", RequestNamespace="http://qjDataAccess.org/", ResponseElementName="EDWITHParamValueResponse", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("EDWITHParamValueResult")]
        public System.Data.DataSet ExecuteDataset(string spName, object[] parameterValues) {
            object[] results = this.Invoke("ExecuteDataset2", new object[] {
                        spName,
                        parameterValues});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteDataset2Async(string spName, object[] parameterValues) {
            this.ExecuteDataset2Async(spName, parameterValues, null);
        }
        
        /// <remarks/>
        public void ExecuteDataset2Async(string spName, object[] parameterValues, object userState) {
            if ((this.ExecuteDataset2OperationCompleted == null)) {
                this.ExecuteDataset2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteDataset2OperationCompleted);
            }
            this.InvokeAsync("ExecuteDataset2", new object[] {
                        spName,
                        parameterValues}, this.ExecuteDataset2OperationCompleted, userState);
        }
        
        private void OnExecuteDataset2OperationCompleted(object arg) {
            if ((this.ExecuteDataset2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteDataset2Completed(this, new ExecuteDataset2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/ES", RequestElementName="ES", RequestNamespace="http://qjDataAccess.org/", ResponseElementName="ESResponse", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ESResult")]
        public object ExecuteScalar(CommandType commandType, string commandText) {
            object[] results = this.Invoke("ExecuteScalar", new object[] {
                        commandType,
                        commandText});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteScalarAsync(CommandType commandType, string commandText) {
            this.ExecuteScalarAsync(commandType, commandText, null);
        }
        
        /// <remarks/>
        public void ExecuteScalarAsync(CommandType commandType, string commandText, object userState) {
            if ((this.ExecuteScalarOperationCompleted == null)) {
                this.ExecuteScalarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteScalarOperationCompleted);
            }
            this.InvokeAsync("ExecuteScalar", new object[] {
                        commandType,
                        commandText}, this.ExecuteScalarOperationCompleted, userState);
        }
        
        private void OnExecuteScalarOperationCompleted(object arg) {
            if ((this.ExecuteScalarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteScalarCompleted(this, new ExecuteScalarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="ExecuteScalar1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/ESWITHParam", RequestElementName="ESWITHParam", RequestNamespace="http://qjDataAccess.org/", ResponseElementName="ESWITHParamResponse", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ESWITHParamResult")]
        public object ExecuteScalar(CommandType commandType, string commandText, SqlParameter[] commandParameters) {
            object[] results = this.Invoke("ExecuteScalar1", new object[] {
                        commandType,
                        commandText,
                        commandParameters});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteScalar1Async(CommandType commandType, string commandText, SqlParameter[] commandParameters) {
            this.ExecuteScalar1Async(commandType, commandText, commandParameters, null);
        }
        
        /// <remarks/>
        public void ExecuteScalar1Async(CommandType commandType, string commandText, SqlParameter[] commandParameters, object userState) {
            if ((this.ExecuteScalar1OperationCompleted == null)) {
                this.ExecuteScalar1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteScalar1OperationCompleted);
            }
            this.InvokeAsync("ExecuteScalar1", new object[] {
                        commandType,
                        commandText,
                        commandParameters}, this.ExecuteScalar1OperationCompleted, userState);
        }
        
        private void OnExecuteScalar1OperationCompleted(object arg) {
            if ((this.ExecuteScalar1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteScalar1Completed(this, new ExecuteScalar1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="ExecuteScalar2")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://qjDataAccess.org/ESWITHParamValue", RequestElementName="ESWITHParamValue", RequestNamespace="http://qjDataAccess.org/", ResponseElementName="ESWITHParamValueResponse", ResponseNamespace="http://qjDataAccess.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ESWITHParamValueResult")]
        public object ExecuteScalar(string spName, object[] parameterValues) {
            object[] results = this.Invoke("ExecuteScalar2", new object[] {
                        spName,
                        parameterValues});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteScalar2Async(string spName, object[] parameterValues) {
            this.ExecuteScalar2Async(spName, parameterValues, null);
        }
        
        /// <remarks/>
        public void ExecuteScalar2Async(string spName, object[] parameterValues, object userState) {
            if ((this.ExecuteScalar2OperationCompleted == null)) {
                this.ExecuteScalar2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteScalar2OperationCompleted);
            }
            this.InvokeAsync("ExecuteScalar2", new object[] {
                        spName,
                        parameterValues}, this.ExecuteScalar2OperationCompleted, userState);
        }
        
        private void OnExecuteScalar2OperationCompleted(object arg) {
            if ((this.ExecuteScalar2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteScalar2Completed(this, new ExecuteScalar2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qjDataAccess.org/")]
    public enum CommandType {
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        StoredProcedure,
        
        /// <remarks/>
        TableDirect,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qjDataAccess.org/")]
    public partial class SqlParameter : DbParameter {
        
        private SqlCompareOptions compareInfoField;
        
        private string xmlSchemaCollectionDatabaseField;
        
        private string xmlSchemaCollectionOwningSchemaField;
        
        private string xmlSchemaCollectionNameField;
        
        private int localeIdField;
        
        private byte precisionField;
        
        private byte scaleField;
        
        private SqlDbType sqlDbTypeField;
        
        private object sqlValueField;
        
        private string udtTypeNameField;
        
        private string typeNameField;
        
        private int offsetField;
        
        public SqlParameter() {
            this.precisionField = ((byte)(0));
            this.scaleField = ((byte)(0));
        }
        
        /// <remarks/>
        public SqlCompareOptions CompareInfo {
            get {
                return this.compareInfoField;
            }
            set {
                this.compareInfoField = value;
            }
        }
        
        /// <remarks/>
        public string XmlSchemaCollectionDatabase {
            get {
                return this.xmlSchemaCollectionDatabaseField;
            }
            set {
                this.xmlSchemaCollectionDatabaseField = value;
            }
        }
        
        /// <remarks/>
        public string XmlSchemaCollectionOwningSchema {
            get {
                return this.xmlSchemaCollectionOwningSchemaField;
            }
            set {
                this.xmlSchemaCollectionOwningSchemaField = value;
            }
        }
        
        /// <remarks/>
        public string XmlSchemaCollectionName {
            get {
                return this.xmlSchemaCollectionNameField;
            }
            set {
                this.xmlSchemaCollectionNameField = value;
            }
        }
        
        /// <remarks/>
        public int LocaleId {
            get {
                return this.localeIdField;
            }
            set {
                this.localeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(byte), "0")]
        public byte Precision {
            get {
                return this.precisionField;
            }
            set {
                this.precisionField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(byte), "0")]
        public byte Scale {
            get {
                return this.scaleField;
            }
            set {
                this.scaleField = value;
            }
        }
        
        /// <remarks/>
        public SqlDbType SqlDbType {
            get {
                return this.sqlDbTypeField;
            }
            set {
                this.sqlDbTypeField = value;
            }
        }
        
        /// <remarks/>
        public object SqlValue {
            get {
                return this.sqlValueField;
            }
            set {
                this.sqlValueField = value;
            }
        }
        
        /// <remarks/>
        public string UdtTypeName {
            get {
                return this.udtTypeNameField;
            }
            set {
                this.udtTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string TypeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
            }
        }
        
        /// <remarks/>
        public int Offset {
            get {
                return this.offsetField;
            }
            set {
                this.offsetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qjDataAccess.org/")]
    public enum SqlCompareOptions {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        IgnoreCase = 2,
        
        /// <remarks/>
        IgnoreNonSpace = 4,
        
        /// <remarks/>
        IgnoreKanaType = 8,
        
        /// <remarks/>
        IgnoreWidth = 16,
        
        /// <remarks/>
        BinarySort = 32,
        
        /// <remarks/>
        BinarySort2 = 64,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qjDataAccess.org/")]
    public enum SqlDbType {
        
        /// <remarks/>
        BigInt,
        
        /// <remarks/>
        Binary,
        
        /// <remarks/>
        Bit,
        
        /// <remarks/>
        Char,
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        Decimal,
        
        /// <remarks/>
        Float,
        
        /// <remarks/>
        Image,
        
        /// <remarks/>
        Int,
        
        /// <remarks/>
        Money,
        
        /// <remarks/>
        NChar,
        
        /// <remarks/>
        NText,
        
        /// <remarks/>
        NVarChar,
        
        /// <remarks/>
        Real,
        
        /// <remarks/>
        UniqueIdentifier,
        
        /// <remarks/>
        SmallDateTime,
        
        /// <remarks/>
        SmallInt,
        
        /// <remarks/>
        SmallMoney,
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Timestamp,
        
        /// <remarks/>
        TinyInt,
        
        /// <remarks/>
        VarBinary,
        
        /// <remarks/>
        VarChar,
        
        /// <remarks/>
        Variant,
        
        /// <remarks/>
        Xml,
        
        /// <remarks/>
        Udt,
        
        /// <remarks/>
        Structured,
        
        /// <remarks/>
        Date,
        
        /// <remarks/>
        Time,
        
        /// <remarks/>
        DateTime2,
        
        /// <remarks/>
        DateTimeOffset,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DbParameter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SqlParameter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qjDataAccess.org/")]
    public abstract partial class MarshalByRefObject {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SqlParameter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qjDataAccess.org/")]
    public abstract partial class DbParameter : MarshalByRefObject {
        
        private DbType dbTypeField;
        
        private ParameterDirection directionField;
        
        private bool isNullableField;
        
        private string parameterNameField;
        
        private int sizeField;
        
        private string sourceColumnField;
        
        private bool sourceColumnNullMappingField;
        
        private DataRowVersion sourceVersionField;
        
        private object valueField;
        
        public DbParameter() {
            this.directionField = ParameterDirection.Input;
            this.parameterNameField = "";
            this.sourceColumnField = "";
            this.sourceColumnNullMappingField = false;
            this.sourceVersionField = DataRowVersion.Current;
        }
        
        /// <remarks/>
        public DbType DbType {
            get {
                return this.dbTypeField;
            }
            set {
                this.dbTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(ParameterDirection.Input)]
        public ParameterDirection Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNullable {
            get {
                return this.isNullableField;
            }
            set {
                this.isNullableField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string ParameterName {
            get {
                return this.parameterNameField;
            }
            set {
                this.parameterNameField = value;
            }
        }
        
        /// <remarks/>
        public int Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("")]
        public string SourceColumn {
            get {
                return this.sourceColumnField;
            }
            set {
                this.sourceColumnField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool SourceColumnNullMapping {
            get {
                return this.sourceColumnNullMappingField;
            }
            set {
                this.sourceColumnNullMappingField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(DataRowVersion.Current)]
        public DataRowVersion SourceVersion {
            get {
                return this.sourceVersionField;
            }
            set {
                this.sourceVersionField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qjDataAccess.org/")]
    public enum DbType {
        
        /// <remarks/>
        AnsiString,
        
        /// <remarks/>
        Binary,
        
        /// <remarks/>
        Byte,
        
        /// <remarks/>
        Boolean,
        
        /// <remarks/>
        Currency,
        
        /// <remarks/>
        Date,
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        Decimal,
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        Guid,
        
        /// <remarks/>
        Int16,
        
        /// <remarks/>
        Int32,
        
        /// <remarks/>
        Int64,
        
        /// <remarks/>
        Object,
        
        /// <remarks/>
        SByte,
        
        /// <remarks/>
        Single,
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        Time,
        
        /// <remarks/>
        UInt16,
        
        /// <remarks/>
        UInt32,
        
        /// <remarks/>
        UInt64,
        
        /// <remarks/>
        VarNumeric,
        
        /// <remarks/>
        AnsiStringFixedLength,
        
        /// <remarks/>
        StringFixedLength,
        
        /// <remarks/>
        Xml,
        
        /// <remarks/>
        DateTime2,
        
        /// <remarks/>
        DateTimeOffset,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qjDataAccess.org/")]
    public enum ParameterDirection {
        
        /// <remarks/>
        Input,
        
        /// <remarks/>
        Output,
        
        /// <remarks/>
        InputOutput,
        
        /// <remarks/>
        ReturnValue,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://qjDataAccess.org/")]
    public enum DataRowVersion {
        
        /// <remarks/>
        Original,
        
        /// <remarks/>
        Current,
        
        /// <remarks/>
        Proposed,
        
        /// <remarks/>
        Default,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecuteNonQueryCompletedEventHandler(object sender, ExecuteNonQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteNonQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteNonQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecuteNonQuery1CompletedEventHandler(object sender, ExecuteNonQuery1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteNonQuery1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteNonQuery1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecuteNonQuery2CompletedEventHandler(object sender, ExecuteNonQuery2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteNonQuery2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteNonQuery2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecuteDatasetCompletedEventHandler(object sender, ExecuteDatasetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteDatasetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteDatasetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecuteDataset1CompletedEventHandler(object sender, ExecuteDataset1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteDataset1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteDataset1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecuteDataset2CompletedEventHandler(object sender, ExecuteDataset2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteDataset2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteDataset2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecuteScalarCompletedEventHandler(object sender, ExecuteScalarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteScalarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteScalarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecuteScalar1CompletedEventHandler(object sender, ExecuteScalar1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteScalar1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteScalar1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecuteScalar2CompletedEventHandler(object sender, ExecuteScalar2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteScalar2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteScalar2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591